:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/NavigationAgent2D.xml.

.. _class_NavigationAgent2D:

NavigationAgent2D
=================

**Inherits:** :ref:`Node<class_Node>` **<** :ref:`Object<class_Object>`

2D Agent used in navigation for collision avoidance.

Description
-----------

2D Agent that is used in navigation to reach a location while avoiding static and dynamic obstacles. The dynamic obstacles are avoided using RVO collision avoidance. The agent needs navigation data to work correctly. ``NavigationAgent2D`` is physics safe.

\ **Note:** After :ref:`set_target_location<class_NavigationAgent2D_method_set_target_location>` is used it is required to use the :ref:`get_next_location<class_NavigationAgent2D_method_get_next_location>` function once every physics frame to update the internal path logic of the NavigationAgent. The returned vector position from this function should be used as the next movement position for the agent's parent Node.

Properties
----------

+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`bool<class_bool>`   | :ref:`avoidance_enabled<class_NavigationAgent2D_property_avoidance_enabled>`             | ``false`` |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`int<class_int>`     | :ref:`max_neighbors<class_NavigationAgent2D_property_max_neighbors>`                     | ``10``    |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`max_speed<class_NavigationAgent2D_property_max_speed>`                             | ``200.0`` |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`int<class_int>`     | :ref:`navigation_layers<class_NavigationAgent2D_property_navigation_layers>`             | ``1``     |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`neighbor_distance<class_NavigationAgent2D_property_neighbor_distance>`             | ``500.0`` |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`path_desired_distance<class_NavigationAgent2D_property_path_desired_distance>`     | ``1.0``   |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`path_max_distance<class_NavigationAgent2D_property_path_max_distance>`             | ``3.0``   |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`radius<class_NavigationAgent2D_property_radius>`                                   | ``10.0``  |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`target_desired_distance<class_NavigationAgent2D_property_target_desired_distance>` | ``1.0``   |
+---------------------------+------------------------------------------------------------------------------------------+-----------+
| :ref:`float<class_float>` | :ref:`time_horizon<class_NavigationAgent2D_property_time_horizon>`                       | ``20.0``  |
+---------------------------+------------------------------------------------------------------------------------------+-----------+

Methods
-------

+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                           | :ref:`distance_to_target<class_NavigationAgent2D_method_distance_to_target>` **(** **)** |const|                                                                           |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`get_final_location<class_NavigationAgent2D_method_get_final_location>` **(** **)**                                                                                   |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector2Array<class_PackedVector2Array>` | :ref:`get_nav_path<class_NavigationAgent2D_method_get_nav_path>` **(** **)** |const|                                                                                       |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`get_nav_path_index<class_NavigationAgent2D_method_get_nav_path_index>` **(** **)** |const|                                                                           |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`get_navigation_layer_value<class_NavigationAgent2D_method_get_navigation_layer_value>` **(** :ref:`int<class_int>` layer_number **)** |const|                        |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                               | :ref:`get_navigation_map<class_NavigationAgent2D_method_get_navigation_map>` **(** **)** |const|                                                                           |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`get_next_location<class_NavigationAgent2D_method_get_next_location>` **(** **)**                                                                                     |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                               | :ref:`get_rid<class_NavigationAgent2D_method_get_rid>` **(** **)** |const|                                                                                                 |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                       | :ref:`get_target_location<class_NavigationAgent2D_method_get_target_location>` **(** **)** |const|                                                                         |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`is_navigation_finished<class_NavigationAgent2D_method_is_navigation_finished>` **(** **)**                                                                           |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`is_target_reachable<class_NavigationAgent2D_method_is_target_reachable>` **(** **)**                                                                                 |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`is_target_reached<class_NavigationAgent2D_method_is_target_reached>` **(** **)** |const|                                                                             |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`set_navigation_layer_value<class_NavigationAgent2D_method_set_navigation_layer_value>` **(** :ref:`int<class_int>` layer_number, :ref:`bool<class_bool>` value **)** |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`set_navigation_map<class_NavigationAgent2D_method_set_navigation_map>` **(** :ref:`RID<class_RID>` navigation_map **)**                                              |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`set_target_location<class_NavigationAgent2D_method_set_target_location>` **(** :ref:`Vector2<class_Vector2>` location **)**                                          |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`set_velocity<class_NavigationAgent2D_method_set_velocity>` **(** :ref:`Vector2<class_Vector2>` velocity **)**                                                        |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Signals
-------

.. _class_NavigationAgent2D_signal_navigation_finished:

- **navigation_finished** **(** **)**

Notifies when the final location is reached.

----

.. _class_NavigationAgent2D_signal_path_changed:

- **path_changed** **(** **)**

Notifies when the navigation path changes.

----

.. _class_NavigationAgent2D_signal_target_reached:

- **target_reached** **(** **)**

Notifies when the player defined target, set with :ref:`set_target_location<class_NavigationAgent2D_method_set_target_location>`, is reached.

----

.. _class_NavigationAgent2D_signal_velocity_computed:

- **velocity_computed** **(** :ref:`Vector3<class_Vector3>` safe_velocity **)**

Notifies when the collision avoidance velocity is calculated. Emitted by :ref:`set_velocity<class_NavigationAgent2D_method_set_velocity>`. Only emitted when :ref:`avoidance_enabled<class_NavigationAgent2D_property_avoidance_enabled>` is true.

Property Descriptions
---------------------

.. _class_NavigationAgent2D_property_avoidance_enabled:

- :ref:`bool<class_bool>` **avoidance_enabled**

+-----------+------------------------------+
| *Default* | ``false``                    |
+-----------+------------------------------+
| *Setter*  | set_avoidance_enabled(value) |
+-----------+------------------------------+
| *Getter*  | get_avoidance_enabled()      |
+-----------+------------------------------+

If ``true`` the agent is registered for an RVO avoidance callback on the :ref:`NavigationServer2D<class_NavigationServer2D>`. When :ref:`set_velocity<class_NavigationAgent2D_method_set_velocity>` is used and the processing is completed a ``safe_velocity`` Vector2 is received with a signal connection to :ref:`velocity_computed<class_NavigationAgent2D_signal_velocity_computed>`. Avoidance processing with many registered agents has a significant performance cost and should only be enabled on agents that currently require it.

----

.. _class_NavigationAgent2D_property_max_neighbors:

- :ref:`int<class_int>` **max_neighbors**

+-----------+--------------------------+
| *Default* | ``10``                   |
+-----------+--------------------------+
| *Setter*  | set_max_neighbors(value) |
+-----------+--------------------------+
| *Getter*  | get_max_neighbors()      |
+-----------+--------------------------+

The maximum number of neighbors for the agent to consider.

----

.. _class_NavigationAgent2D_property_max_speed:

- :ref:`float<class_float>` **max_speed**

+-----------+----------------------+
| *Default* | ``200.0``            |
+-----------+----------------------+
| *Setter*  | set_max_speed(value) |
+-----------+----------------------+
| *Getter*  | get_max_speed()      |
+-----------+----------------------+

The maximum speed that an agent can move.

----

.. _class_NavigationAgent2D_property_navigation_layers:

- :ref:`int<class_int>` **navigation_layers**

+-----------+------------------------------+
| *Default* | ``1``                        |
+-----------+------------------------------+
| *Setter*  | set_navigation_layers(value) |
+-----------+------------------------------+
| *Getter*  | get_navigation_layers()      |
+-----------+------------------------------+

A bitfield determining what navigation layers of navigation regions this agent will use to calculate path. Changing it runtime will clear current navigation path and generate new one, according to new navigation layers.

----

.. _class_NavigationAgent2D_property_neighbor_distance:

- :ref:`float<class_float>` **neighbor_distance**

+-----------+------------------------------+
| *Default* | ``500.0``                    |
+-----------+------------------------------+
| *Setter*  | set_neighbor_distance(value) |
+-----------+------------------------------+
| *Getter*  | get_neighbor_distance()      |
+-----------+------------------------------+

The distance to search for other agents.

----

.. _class_NavigationAgent2D_property_path_desired_distance:

- :ref:`float<class_float>` **path_desired_distance**

+-----------+----------------------------------+
| *Default* | ``1.0``                          |
+-----------+----------------------------------+
| *Setter*  | set_path_desired_distance(value) |
+-----------+----------------------------------+
| *Getter*  | get_path_desired_distance()      |
+-----------+----------------------------------+

The distance threshold before a path point is considered to be reached. This will allow an agent to not have to hit a path point on the path exactly, but in the area. If this value is set to high the NavigationAgent will skip points on the path which can lead to leaving the navigation mesh. If this value is set to low the NavigationAgent will be stuck in a repath loop cause it will constantly overshoot or undershoot the distance to the next point on each physics frame update.

----

.. _class_NavigationAgent2D_property_path_max_distance:

- :ref:`float<class_float>` **path_max_distance**

+-----------+------------------------------+
| *Default* | ``3.0``                      |
+-----------+------------------------------+
| *Setter*  | set_path_max_distance(value) |
+-----------+------------------------------+
| *Getter*  | get_path_max_distance()      |
+-----------+------------------------------+

The maximum distance the agent is allowed away from the ideal path to the final location. This can happen due to trying to avoid collisions. When the maximum distance is exceeded, it recalculates the ideal path.

----

.. _class_NavigationAgent2D_property_radius:

- :ref:`float<class_float>` **radius**

+-----------+-------------------+
| *Default* | ``10.0``          |
+-----------+-------------------+
| *Setter*  | set_radius(value) |
+-----------+-------------------+
| *Getter*  | get_radius()      |
+-----------+-------------------+

The radius of the avoidance agent. This is the "body" of the avoidance agent and not the avoidance maneuver starting radius (which is controlled by :ref:`neighbor_distance<class_NavigationAgent2D_property_neighbor_distance>`).

Does not affect normal pathfinding. To change an actor's pathfinding radius bake :ref:`NavigationMesh<class_NavigationMesh>` resources with a different :ref:`NavigationMesh.agent_radius<class_NavigationMesh_property_agent_radius>` property and use different navigation maps for each actor size.

----

.. _class_NavigationAgent2D_property_target_desired_distance:

- :ref:`float<class_float>` **target_desired_distance**

+-----------+------------------------------------+
| *Default* | ``1.0``                            |
+-----------+------------------------------------+
| *Setter*  | set_target_desired_distance(value) |
+-----------+------------------------------------+
| *Getter*  | get_target_desired_distance()      |
+-----------+------------------------------------+

The distance threshold before the final target point is considered to be reached. This will allow an agent to not have to hit the point of the final target exactly, but only the area. If this value is set to low the NavigationAgent will be stuck in a repath loop cause it will constantly overshoot or undershoot the distance to the final target point on each physics frame update.

----

.. _class_NavigationAgent2D_property_time_horizon:

- :ref:`float<class_float>` **time_horizon**

+-----------+-------------------------+
| *Default* | ``20.0``                |
+-----------+-------------------------+
| *Setter*  | set_time_horizon(value) |
+-----------+-------------------------+
| *Getter*  | get_time_horizon()      |
+-----------+-------------------------+

The minimal amount of time for which this agent's velocities, that are computed with the collision avoidance algorithm, are safe with respect to other agents. The larger the number, the sooner the agent will respond to other agents, but less freedom in choosing its velocities. Must be positive.

Method Descriptions
-------------------

.. _class_NavigationAgent2D_method_distance_to_target:

- :ref:`float<class_float>` **distance_to_target** **(** **)** |const|

Returns the distance to the target location, using the agent's global position. The user must set the target location with :ref:`set_target_location<class_NavigationAgent2D_method_set_target_location>` in order for this to be accurate.

----

.. _class_NavigationAgent2D_method_get_final_location:

- :ref:`Vector2<class_Vector2>` **get_final_location** **(** **)**

Returns the reachable final location in global coordinates. This can change if the navigation path is altered in any way. Because of this, it would be best to check this each frame.

----

.. _class_NavigationAgent2D_method_get_nav_path:

- :ref:`PackedVector2Array<class_PackedVector2Array>` **get_nav_path** **(** **)** |const|

Returns this agent's current path from start to finish in global coordinates. The path only updates when the target location is changed or the agent requires a repath. The path array is not intended to be used in direct path movement as the agent has its own internal path logic that would get corrupted by changing the path array manually. Use the intended :ref:`get_next_location<class_NavigationAgent2D_method_get_next_location>` once every physics frame to receive the next path point for the agents movement as this function also updates the internal path logic.

----

.. _class_NavigationAgent2D_method_get_nav_path_index:

- :ref:`int<class_int>` **get_nav_path_index** **(** **)** |const|

Returns which index the agent is currently on in the navigation path's :ref:`PackedVector2Array<class_PackedVector2Array>`.

----

.. _class_NavigationAgent2D_method_get_navigation_layer_value:

- :ref:`bool<class_bool>` **get_navigation_layer_value** **(** :ref:`int<class_int>` layer_number **)** |const|

Returns whether or not the specified layer of the :ref:`navigation_layers<class_NavigationAgent2D_property_navigation_layers>` bitmask is enabled, given a ``layer_number`` between 1 and 32.

----

.. _class_NavigationAgent2D_method_get_navigation_map:

- :ref:`RID<class_RID>` **get_navigation_map** **(** **)** |const|

Returns the :ref:`RID<class_RID>` of the navigation map for this NavigationAgent node. This function returns always the map set on the NavigationAgent node and not the map of the abstract agent on the NavigationServer. If the agent map is changed directly with the NavigationServer API the NavigationAgent node will not be aware of the map change. Use :ref:`set_navigation_map<class_NavigationAgent2D_method_set_navigation_map>` to change the navigation map for the NavigationAgent and also update the agent on the NavigationServer.

----

.. _class_NavigationAgent2D_method_get_next_location:

- :ref:`Vector2<class_Vector2>` **get_next_location** **(** **)**

Returns the next location in global coordinates that can be moved to, making sure that there are no static objects in the way. If the agent does not have a navigation path, it will return the position of the agent's parent. The use of this function once every physics frame is required to update the internal path logic of the NavigationAgent.

----

.. _class_NavigationAgent2D_method_get_rid:

- :ref:`RID<class_RID>` **get_rid** **(** **)** |const|

Returns the :ref:`RID<class_RID>` of this agent on the :ref:`NavigationServer2D<class_NavigationServer2D>`.

----

.. _class_NavigationAgent2D_method_get_target_location:

- :ref:`Vector2<class_Vector2>` **get_target_location** **(** **)** |const|

Returns the user defined :ref:`Vector2<class_Vector2>` after setting the target location.

----

.. _class_NavigationAgent2D_method_is_navigation_finished:

- :ref:`bool<class_bool>` **is_navigation_finished** **(** **)**

Returns true if the navigation path's final location has been reached.

----

.. _class_NavigationAgent2D_method_is_target_reachable:

- :ref:`bool<class_bool>` **is_target_reachable** **(** **)**

Returns true if the target location is reachable. The target location is set using :ref:`set_target_location<class_NavigationAgent2D_method_set_target_location>`.

----

.. _class_NavigationAgent2D_method_is_target_reached:

- :ref:`bool<class_bool>` **is_target_reached** **(** **)** |const|

Returns true if the target location is reached. The target location is set using :ref:`set_target_location<class_NavigationAgent2D_method_set_target_location>`. It may not always be possible to reach the target location. It should always be possible to reach the final location though. See :ref:`get_final_location<class_NavigationAgent2D_method_get_final_location>`.

----

.. _class_NavigationAgent2D_method_set_navigation_layer_value:

- void **set_navigation_layer_value** **(** :ref:`int<class_int>` layer_number, :ref:`bool<class_bool>` value **)**

Based on ``value``, enables or disables the specified layer in the :ref:`navigation_layers<class_NavigationAgent2D_property_navigation_layers>` bitmask, given a ``layer_number`` between 1 and 32.

----

.. _class_NavigationAgent2D_method_set_navigation_map:

- void **set_navigation_map** **(** :ref:`RID<class_RID>` navigation_map **)**

Sets the :ref:`RID<class_RID>` of the navigation map this NavigationAgent node should use and also updates the ``agent`` on the NavigationServer.

----

.. _class_NavigationAgent2D_method_set_target_location:

- void **set_target_location** **(** :ref:`Vector2<class_Vector2>` location **)**

Sets the user desired final location. This will clear the current navigation path.

----

.. _class_NavigationAgent2D_method_set_velocity:

- void **set_velocity** **(** :ref:`Vector2<class_Vector2>` velocity **)**

Sends the passed in velocity to the collision avoidance algorithm. It will adjust the velocity to avoid collisions. Once the adjustment to the velocity is complete, it will emit the :ref:`velocity_computed<class_NavigationAgent2D_signal_velocity_computed>` signal.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
