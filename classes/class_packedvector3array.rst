:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PackedVector3Array.xml.

.. _class_PackedVector3Array:

PackedVector3Array
==================

A packed array of :ref:`Vector3<class_Vector3>`\ s.

Description
-----------

An array specifically designed to hold :ref:`Vector3<class_Vector3>`. Packs data tightly, so it saves memory for large array sizes.

Constructors
------------

+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`PackedVector3Array<class_PackedVector3Array_constructor_PackedVector3Array>` **(** **)**                                                          |
+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`PackedVector3Array<class_PackedVector3Array_constructor_PackedVector3Array>` **(** :ref:`PackedVector3Array<class_PackedVector3Array>` from **)** |
+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`PackedVector3Array<class_PackedVector3Array_constructor_PackedVector3Array>` **(** :ref:`Array<class_Array>` from **)**                           |
+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------+

Methods
-------

+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`append<class_PackedVector3Array_method_append>` **(** :ref:`Vector3<class_Vector3>` value **)**                                        |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`append_array<class_PackedVector3Array_method_append_array>` **(** :ref:`PackedVector3Array<class_PackedVector3Array>` array **)**      |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`bsearch<class_PackedVector3Array_method_bsearch>` **(** :ref:`Vector3<class_Vector3>` value, :ref:`bool<class_bool>` before=true **)** |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`clear<class_PackedVector3Array_method_clear>` **(** **)**                                                                              |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`count<class_PackedVector3Array_method_count>` **(** :ref:`Vector3<class_Vector3>` value **)** |const|                                  |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`duplicate<class_PackedVector3Array_method_duplicate>` **(** **)**                                                                      |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`fill<class_PackedVector3Array_method_fill>` **(** :ref:`Vector3<class_Vector3>` value **)**                                            |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`find<class_PackedVector3Array_method_find>` **(** :ref:`Vector3<class_Vector3>` value, :ref:`int<class_int>` from=0 **)** |const|      |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`has<class_PackedVector3Array_method_has>` **(** :ref:`Vector3<class_Vector3>` value **)** |const|                                      |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`insert<class_PackedVector3Array_method_insert>` **(** :ref:`int<class_int>` at_index, :ref:`Vector3<class_Vector3>` value **)**        |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`is_empty<class_PackedVector3Array_method_is_empty>` **(** **)** |const|                                                                |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`push_back<class_PackedVector3Array_method_push_back>` **(** :ref:`Vector3<class_Vector3>` value **)**                                  |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`remove_at<class_PackedVector3Array_method_remove_at>` **(** :ref:`int<class_int>` index **)**                                          |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`resize<class_PackedVector3Array_method_resize>` **(** :ref:`int<class_int>` new_size **)**                                             |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`reverse<class_PackedVector3Array_method_reverse>` **(** **)**                                                                          |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`rfind<class_PackedVector3Array_method_rfind>` **(** :ref:`Vector3<class_Vector3>` value, :ref:`int<class_int>` from=-1 **)** |const|   |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`set<class_PackedVector3Array_method_set>` **(** :ref:`int<class_int>` index, :ref:`Vector3<class_Vector3>` value **)**                 |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                               | :ref:`size<class_PackedVector3Array_method_size>` **(** **)** |const|                                                                        |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`slice<class_PackedVector3Array_method_slice>` **(** :ref:`int<class_int>` begin, :ref:`int<class_int>` end=2147483647 **)** |const|    |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                | :ref:`sort<class_PackedVector3Array_method_sort>` **(** **)**                                                                                |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedByteArray<class_PackedByteArray>`       | :ref:`to_byte_array<class_PackedVector3Array_method_to_byte_array>` **(** **)** |const|                                                      |
+-----------------------------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------+

Operators
---------

+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`operator !=<class_PackedVector3Array_operator_neq_bool>` **(** :ref:`PackedVector3Array<class_PackedVector3Array>` right **)**              |
+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`operator *<class_PackedVector3Array_operator_mul_PackedVector3Array>` **(** :ref:`Transform3D<class_Transform3D>` right **)**               |
+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PackedVector3Array<class_PackedVector3Array>` | :ref:`operator +<class_PackedVector3Array_operator_sum_PackedVector3Array>` **(** :ref:`PackedVector3Array<class_PackedVector3Array>` right **)** |
+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                             | :ref:`operator ==<class_PackedVector3Array_operator_eq_bool>` **(** :ref:`PackedVector3Array<class_PackedVector3Array>` right **)**               |
+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector3<class_Vector3>`                       | :ref:`operator []<class_PackedVector3Array_operator_idx_Vector3>` **(** :ref:`int<class_int>` index **)**                                         |
+-----------------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------+

Constructor Descriptions
------------------------

.. _class_PackedVector3Array_constructor_PackedVector3Array:

- :ref:`PackedVector3Array<class_PackedVector3Array>` **PackedVector3Array** **(** **)**

Constructs an empty ``PackedVector3Array``.

----

- :ref:`PackedVector3Array<class_PackedVector3Array>` **PackedVector3Array** **(** :ref:`PackedVector3Array<class_PackedVector3Array>` from **)**

Constructs a ``PackedVector3Array`` as a copy of the given ``PackedVector3Array``.

----

- :ref:`PackedVector3Array<class_PackedVector3Array>` **PackedVector3Array** **(** :ref:`Array<class_Array>` from **)**

Constructs a new ``PackedVector3Array``. Optionally, you can pass in a generic :ref:`Array<class_Array>` that will be converted.

Method Descriptions
-------------------

.. _class_PackedVector3Array_method_append:

- :ref:`bool<class_bool>` **append** **(** :ref:`Vector3<class_Vector3>` value **)**

Appends an element at the end of the array (alias of :ref:`push_back<class_PackedVector3Array_method_push_back>`).

----

.. _class_PackedVector3Array_method_append_array:

- void **append_array** **(** :ref:`PackedVector3Array<class_PackedVector3Array>` array **)**

Appends a ``PackedVector3Array`` at the end of this array.

----

.. _class_PackedVector3Array_method_bsearch:

- :ref:`int<class_int>` **bsearch** **(** :ref:`Vector3<class_Vector3>` value, :ref:`bool<class_bool>` before=true **)**

Finds the index of an existing value (or the insertion index that maintains sorting order, if the value is not yet present in the array) using binary search. Optionally, a ``before`` specifier can be passed. If ``false``, the returned index comes after all existing entries of the value in the array.

\ **Note:** Calling :ref:`bsearch<class_PackedVector3Array_method_bsearch>` on an unsorted array results in unexpected behavior.

----

.. _class_PackedVector3Array_method_clear:

- void **clear** **(** **)**

Clears the array. This is equivalent to using :ref:`resize<class_PackedVector3Array_method_resize>` with a size of ``0``.

----

.. _class_PackedVector3Array_method_count:

- :ref:`int<class_int>` **count** **(** :ref:`Vector3<class_Vector3>` value **)** |const|

Returns the number of times an element is in the array.

----

.. _class_PackedVector3Array_method_duplicate:

- :ref:`PackedVector3Array<class_PackedVector3Array>` **duplicate** **(** **)**

Creates a copy of the array, and returns it.

----

.. _class_PackedVector3Array_method_fill:

- void **fill** **(** :ref:`Vector3<class_Vector3>` value **)**

Assigns the given value to all elements in the array. This can typically be used together with :ref:`resize<class_PackedVector3Array_method_resize>` to create an array with a given size and initialized elements.

----

.. _class_PackedVector3Array_method_find:

- :ref:`int<class_int>` **find** **(** :ref:`Vector3<class_Vector3>` value, :ref:`int<class_int>` from=0 **)** |const|

Searches the array for a value and returns its index or ``-1`` if not found. Optionally, the initial search index can be passed.

----

.. _class_PackedVector3Array_method_has:

- :ref:`bool<class_bool>` **has** **(** :ref:`Vector3<class_Vector3>` value **)** |const|

Returns ``true`` if the array contains ``value``.

----

.. _class_PackedVector3Array_method_insert:

- :ref:`int<class_int>` **insert** **(** :ref:`int<class_int>` at_index, :ref:`Vector3<class_Vector3>` value **)**

Inserts a new element at a given position in the array. The position must be valid, or at the end of the array (``idx == size()``).

----

.. _class_PackedVector3Array_method_is_empty:

- :ref:`bool<class_bool>` **is_empty** **(** **)** |const|

Returns ``true`` if the array is empty.

----

.. _class_PackedVector3Array_method_push_back:

- :ref:`bool<class_bool>` **push_back** **(** :ref:`Vector3<class_Vector3>` value **)**

Inserts a :ref:`Vector3<class_Vector3>` at the end.

----

.. _class_PackedVector3Array_method_remove_at:

- void **remove_at** **(** :ref:`int<class_int>` index **)**

Removes an element from the array by index.

----

.. _class_PackedVector3Array_method_resize:

- :ref:`int<class_int>` **resize** **(** :ref:`int<class_int>` new_size **)**

Sets the size of the array. If the array is grown, reserves elements at the end of the array. If the array is shrunk, truncates the array to the new size.

----

.. _class_PackedVector3Array_method_reverse:

- void **reverse** **(** **)**

Reverses the order of the elements in the array.

----

.. _class_PackedVector3Array_method_rfind:

- :ref:`int<class_int>` **rfind** **(** :ref:`Vector3<class_Vector3>` value, :ref:`int<class_int>` from=-1 **)** |const|

Searches the array in reverse order. Optionally, a start search index can be passed. If negative, the start index is considered relative to the end of the array.

----

.. _class_PackedVector3Array_method_set:

- void **set** **(** :ref:`int<class_int>` index, :ref:`Vector3<class_Vector3>` value **)**

Changes the :ref:`Vector3<class_Vector3>` at the given index.

----

.. _class_PackedVector3Array_method_size:

- :ref:`int<class_int>` **size** **(** **)** |const|

Returns the number of elements in the array.

----

.. _class_PackedVector3Array_method_slice:

- :ref:`PackedVector3Array<class_PackedVector3Array>` **slice** **(** :ref:`int<class_int>` begin, :ref:`int<class_int>` end=2147483647 **)** |const|

Returns the slice of the ``PackedVector3Array``, from ``begin`` (inclusive) to ``end`` (exclusive), as a new ``PackedVector3Array``.

The absolute value of ``begin`` and ``end`` will be clamped to the array size, so the default value for ``end`` makes it slice to the size of the array by default (i.e. ``arr.slice(1)`` is a shorthand for ``arr.slice(1, arr.size())``).

If either ``begin`` or ``end`` are negative, they will be relative to the end of the array (i.e. ``arr.slice(0, -2)`` is a shorthand for ``arr.slice(0, arr.size() - 2)``).

----

.. _class_PackedVector3Array_method_sort:

- void **sort** **(** **)**

Sorts the elements of the array in ascending order.

----

.. _class_PackedVector3Array_method_to_byte_array:

- :ref:`PackedByteArray<class_PackedByteArray>` **to_byte_array** **(** **)** |const|

Returns a :ref:`PackedByteArray<class_PackedByteArray>` with each vector encoded as bytes.

Operator Descriptions
---------------------

.. _class_PackedVector3Array_operator_neq_bool:

- :ref:`bool<class_bool>` **operator !=** **(** :ref:`PackedVector3Array<class_PackedVector3Array>` right **)**

Returns ``true`` if contents of the arrays differ.

----

.. _class_PackedVector3Array_operator_mul_PackedVector3Array:

- :ref:`PackedVector3Array<class_PackedVector3Array>` **operator *** **(** :ref:`Transform3D<class_Transform3D>` right **)**

Transforms (multiplies) all vectors in the array by the :ref:`Transform3D<class_Transform3D>` matrix.

----

.. _class_PackedVector3Array_operator_sum_PackedVector3Array:

- :ref:`PackedVector3Array<class_PackedVector3Array>` **operator +** **(** :ref:`PackedVector3Array<class_PackedVector3Array>` right **)**

Returns a new ``PackedVector3Array`` with contents of ``right`` added at the end of this array. For better performance, consider using :ref:`append_array<class_PackedVector3Array_method_append_array>` instead.

----

.. _class_PackedVector3Array_operator_eq_bool:

- :ref:`bool<class_bool>` **operator ==** **(** :ref:`PackedVector3Array<class_PackedVector3Array>` right **)**

Returns ``true`` if contents of both arrays are the same, i.e. they have all equal :ref:`Vector3<class_Vector3>`\ s at the corresponding indices.

----

.. _class_PackedVector3Array_operator_idx_Vector3:

- :ref:`Vector3<class_Vector3>` **operator []** **(** :ref:`int<class_int>` index **)**

Returns the :ref:`Vector3<class_Vector3>` at index ``index``. Negative indices can be used to access the elements starting from the end. Using index out of array's bounds will result in an error.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
