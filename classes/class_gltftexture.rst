:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/modules/gltf/doc_classes/GLTFTexture.xml.

.. _class_GLTFTexture:

GLTFTexture
===========

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`



Properties
----------

+-----------------------+--------------------------------------------------------+--------+
| :ref:`int<class_int>` | :ref:`sampler<class_GLTFTexture_property_sampler>`     | ``-1`` |
+-----------------------+--------------------------------------------------------+--------+
| :ref:`int<class_int>` | :ref:`src_image<class_GLTFTexture_property_src_image>` | ``0``  |
+-----------------------+--------------------------------------------------------+--------+

Property Descriptions
---------------------

.. _class_GLTFTexture_property_sampler:

- :ref:`int<class_int>` **sampler**

+-----------+--------------------+
| *Default* | ``-1``             |
+-----------+--------------------+
| *Setter*  | set_sampler(value) |
+-----------+--------------------+
| *Getter*  | get_sampler()      |
+-----------+--------------------+

ID of the texture sampler to use when sampling the image. If -1, then the default texture sampler is used (linear filtering, and repeat wrapping in both axes).

----

.. _class_GLTFTexture_property_src_image:

- :ref:`int<class_int>` **src_image**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_src_image(value) |
+-----------+----------------------+
| *Getter*  | get_src_image()      |
+-----------+----------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
