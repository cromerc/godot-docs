:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/CameraAttributes.xml.

.. _class_CameraAttributes:

CameraAttributes
================

**Inherits:** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`CameraAttributesPhysical<class_CameraAttributesPhysical>`, :ref:`CameraAttributesPractical<class_CameraAttributesPractical>`

Parent class for camera settings.

Description
-----------

Controls camera-specific attributes such as depth of field and exposure override.

When used in a :ref:`WorldEnvironment<class_WorldEnvironment>` it provides default settings for exposure, auto-exposure, and depth of field that will be used by all cameras without their own ``CameraAttributes``, including the editor camera. When used in a :ref:`Camera3D<class_Camera3D>` it will override any ``CameraAttributes`` set in the :ref:`WorldEnvironment<class_WorldEnvironment>`. When used in :ref:`VoxelGI<class_VoxelGI>` or :ref:`LightmapGI<class_LightmapGI>`, only the exposure settings will be used.

See also :ref:`Environment<class_Environment>` for general 3D environment settings.

This is a pure virtual class that is inherited by :ref:`CameraAttributesPhysical<class_CameraAttributesPhysical>` and :ref:`CameraAttributesPractical<class_CameraAttributesPractical>`.

Properties
----------

+---------------------------+-------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`   | :ref:`auto_exposure_enabled<class_CameraAttributes_property_auto_exposure_enabled>` |
+---------------------------+-------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`auto_exposure_scale<class_CameraAttributes_property_auto_exposure_scale>`     |
+---------------------------+-------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`auto_exposure_speed<class_CameraAttributes_property_auto_exposure_speed>`     |
+---------------------------+-------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`exposure_multiplier<class_CameraAttributes_property_exposure_multiplier>`     |
+---------------------------+-------------------------------------------------------------------------------------+
| :ref:`float<class_float>` | :ref:`exposure_sensitivity<class_CameraAttributes_property_exposure_sensitivity>`   |
+---------------------------+-------------------------------------------------------------------------------------+

Property Descriptions
---------------------

.. _class_CameraAttributes_property_auto_exposure_enabled:

- :ref:`bool<class_bool>` **auto_exposure_enabled**

+----------+----------------------------------+
| *Setter* | set_auto_exposure_enabled(value) |
+----------+----------------------------------+
| *Getter* | is_auto_exposure_enabled()       |
+----------+----------------------------------+

If ``true``, enables the tonemapping auto exposure mode of the scene renderer. If ``true``, the renderer will automatically determine the exposure setting to adapt to the scene's illumination and the observed light.

----

.. _class_CameraAttributes_property_auto_exposure_scale:

- :ref:`float<class_float>` **auto_exposure_scale**

+----------+--------------------------------+
| *Setter* | set_auto_exposure_scale(value) |
+----------+--------------------------------+
| *Getter* | get_auto_exposure_scale()      |
+----------+--------------------------------+

The scale of the auto exposure effect. Affects the intensity of auto exposure.

----

.. _class_CameraAttributes_property_auto_exposure_speed:

- :ref:`float<class_float>` **auto_exposure_speed**

+----------+--------------------------------+
| *Setter* | set_auto_exposure_speed(value) |
+----------+--------------------------------+
| *Getter* | get_auto_exposure_speed()      |
+----------+--------------------------------+

The speed of the auto exposure effect. Affects the time needed for the camera to perform auto exposure.

----

.. _class_CameraAttributes_property_exposure_multiplier:

- :ref:`float<class_float>` **exposure_multiplier**

+----------+--------------------------------+
| *Setter* | set_exposure_multiplier(value) |
+----------+--------------------------------+
| *Getter* | get_exposure_multiplier()      |
+----------+--------------------------------+

Multiplier for the exposure amount. A higher value results in a brighter image.

----

.. _class_CameraAttributes_property_exposure_sensitivity:

- :ref:`float<class_float>` **exposure_sensitivity**

+----------+---------------------------------+
| *Setter* | set_exposure_sensitivity(value) |
+----------+---------------------------------+
| *Getter* | get_exposure_sensitivity()      |
+----------+---------------------------------+

Sensitivity of camera sensors, measured in ISO. A higher sensitivity results in a brighter image. Only available when :ref:`ProjectSettings.rendering/lights_and_shadows/use_physical_light_units<class_ProjectSettings_property_rendering/lights_and_shadows/use_physical_light_units>` is enabled. When :ref:`auto_exposure_enabled<class_CameraAttributes_property_auto_exposure_enabled>` this can be used as a method of exposure compensation, doubling the value will increase the exposure value (measured in EV100) by 1 stop.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
