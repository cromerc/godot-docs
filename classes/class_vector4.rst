:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/Vector4.xml.

.. _class_Vector4:

Vector4
=======

Vector used for 4D math using floating point coordinates.

Description
-----------

4-element structure that can be used to represent any quadruplet of numeric values.

It uses floating-point coordinates. See :ref:`Vector4i<class_Vector4i>` for its integer counterpart.

\ **Note:** In a boolean context, a Vector4 will evaluate to ``false`` if it's equal to ``Vector4(0, 0, 0, 0)``. Otherwise, a Vector4 will always evaluate to ``true``.

Properties
----------

+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`w<class_Vector4_property_w>` | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`x<class_Vector4_property_x>` | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`y<class_Vector4_property_y>` | ``0.0`` |
+---------------------------+------------------------------------+---------+
| :ref:`float<class_float>` | :ref:`z<class_Vector4_property_z>` | ``0.0`` |
+---------------------------+------------------------------------+---------+

Constructors
------------

+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`Vector4<class_Vector4_constructor_Vector4>` **(** **)**                                                                                                                    |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`Vector4<class_Vector4_constructor_Vector4>` **(** :ref:`Vector4<class_Vector4>` from **)**                                                                                 |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`Vector4<class_Vector4_constructor_Vector4>` **(** :ref:`Vector4i<class_Vector4i>` from **)**                                                                               |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`Vector4<class_Vector4_constructor_Vector4>` **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z, :ref:`float<class_float>` w **)** |
+-------------------------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Methods
-------

+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`abs<class_Vector4_method_abs>` **(** **)** |const|                                                                                                                                                                                                                                                                                                |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`ceil<class_Vector4_method_ceil>` **(** **)** |const|                                                                                                                                                                                                                                                                                              |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`clamp<class_Vector4_method_clamp>` **(** :ref:`Vector4<class_Vector4>` min, :ref:`Vector4<class_Vector4>` max **)** |const|                                                                                                                                                                                                                       |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`cubic_interpolate<class_Vector4_method_cubic_interpolate>` **(** :ref:`Vector4<class_Vector4>` b, :ref:`Vector4<class_Vector4>` pre_a, :ref:`Vector4<class_Vector4>` post_b, :ref:`float<class_float>` weight **)** |const|                                                                                                                       |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`cubic_interpolate_in_time<class_Vector4_method_cubic_interpolate_in_time>` **(** :ref:`Vector4<class_Vector4>` b, :ref:`Vector4<class_Vector4>` pre_a, :ref:`Vector4<class_Vector4>` post_b, :ref:`float<class_float>` weight, :ref:`float<class_float>` b_t, :ref:`float<class_float>` pre_a_t, :ref:`float<class_float>` post_b_t **)** |const| |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`direction_to<class_Vector4_method_direction_to>` **(** :ref:`Vector4<class_Vector4>` to **)** |const|                                                                                                                                                                                                                                             |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`distance_squared_to<class_Vector4_method_distance_squared_to>` **(** :ref:`Vector4<class_Vector4>` to **)** |const|                                                                                                                                                                                                                               |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`distance_to<class_Vector4_method_distance_to>` **(** :ref:`Vector4<class_Vector4>` to **)** |const|                                                                                                                                                                                                                                               |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`dot<class_Vector4_method_dot>` **(** :ref:`Vector4<class_Vector4>` with **)** |const|                                                                                                                                                                                                                                                             |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`floor<class_Vector4_method_floor>` **(** **)** |const|                                                                                                                                                                                                                                                                                            |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`inverse<class_Vector4_method_inverse>` **(** **)** |const|                                                                                                                                                                                                                                                                                        |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_equal_approx<class_Vector4_method_is_equal_approx>` **(** :ref:`Vector4<class_Vector4>` with **)** |const|                                                                                                                                                                                                                                     |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`is_normalized<class_Vector4_method_is_normalized>` **(** **)** |const|                                                                                                                                                                                                                                                                            |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`length<class_Vector4_method_length>` **(** **)** |const|                                                                                                                                                                                                                                                                                          |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`length_squared<class_Vector4_method_length_squared>` **(** **)** |const|                                                                                                                                                                                                                                                                          |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`lerp<class_Vector4_method_lerp>` **(** :ref:`Vector4<class_Vector4>` to, :ref:`float<class_float>` weight **)** |const|                                                                                                                                                                                                                           |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`max_axis_index<class_Vector4_method_max_axis_index>` **(** **)** |const|                                                                                                                                                                                                                                                                          |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`         | :ref:`min_axis_index<class_Vector4_method_min_axis_index>` **(** **)** |const|                                                                                                                                                                                                                                                                          |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`normalized<class_Vector4_method_normalized>` **(** **)** |const|                                                                                                                                                                                                                                                                                  |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`posmod<class_Vector4_method_posmod>` **(** :ref:`float<class_float>` mod **)** |const|                                                                                                                                                                                                                                                            |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`posmodv<class_Vector4_method_posmodv>` **(** :ref:`Vector4<class_Vector4>` modv **)** |const|                                                                                                                                                                                                                                                     |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`round<class_Vector4_method_round>` **(** **)** |const|                                                                                                                                                                                                                                                                                            |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`sign<class_Vector4_method_sign>` **(** **)** |const|                                                                                                                                                                                                                                                                                              |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`snapped<class_Vector4_method_snapped>` **(** :ref:`Vector4<class_Vector4>` step **)** |const|                                                                                                                                                                                                                                                     |
+-------------------------------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Operators
---------

+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`operator !=<class_Vector4_operator_neq_bool>` **(** :ref:`Vector4<class_Vector4>` right **)**         |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator *<class_Vector4_operator_mul_Vector4>` **(** :ref:`Projection<class_Projection>` right **)** |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator *<class_Vector4_operator_mul_Vector4>` **(** :ref:`Vector4<class_Vector4>` right **)**       |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator *<class_Vector4_operator_mul_Vector4>` **(** :ref:`float<class_float>` right **)**           |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator *<class_Vector4_operator_mul_Vector4>` **(** :ref:`int<class_int>` right **)**               |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator +<class_Vector4_operator_sum_Vector4>` **(** :ref:`Vector4<class_Vector4>` right **)**       |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator -<class_Vector4_operator_dif_Vector4>` **(** :ref:`Vector4<class_Vector4>` right **)**       |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator /<class_Vector4_operator_div_Vector4>` **(** :ref:`Vector4<class_Vector4>` right **)**       |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator /<class_Vector4_operator_div_Vector4>` **(** :ref:`float<class_float>` right **)**           |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator /<class_Vector4_operator_div_Vector4>` **(** :ref:`int<class_int>` right **)**               |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`operator \<<class_Vector4_operator_lt_bool>` **(** :ref:`Vector4<class_Vector4>` right **)**          |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`operator \<=<class_Vector4_operator_lte_bool>` **(** :ref:`Vector4<class_Vector4>` right **)**        |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`operator ==<class_Vector4_operator_eq_bool>` **(** :ref:`Vector4<class_Vector4>` right **)**          |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`operator ><class_Vector4_operator_gt_bool>` **(** :ref:`Vector4<class_Vector4>` right **)**           |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`       | :ref:`operator >=<class_Vector4_operator_gte_bool>` **(** :ref:`Vector4<class_Vector4>` right **)**         |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`     | :ref:`operator []<class_Vector4_operator_idx_float>` **(** :ref:`int<class_int>` index **)**                |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator unary+<class_Vector4_operator_unplus_Vector4>` **(** **)**                                   |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+
| :ref:`Vector4<class_Vector4>` | :ref:`operator unary-<class_Vector4_operator_unminus_Vector4>` **(** **)**                                  |
+-------------------------------+-------------------------------------------------------------------------------------------------------------+

Constants
---------

.. _class_Vector4_constant_AXIS_X:

.. _class_Vector4_constant_AXIS_Y:

.. _class_Vector4_constant_AXIS_Z:

.. _class_Vector4_constant_AXIS_W:

.. _class_Vector4_constant_ZERO:

.. _class_Vector4_constant_ONE:

.. _class_Vector4_constant_INF:

- **AXIS_X** = **0** --- Enumerated value for the X axis. Returned by :ref:`max_axis_index<class_Vector4_method_max_axis_index>` and :ref:`min_axis_index<class_Vector4_method_min_axis_index>`.

- **AXIS_Y** = **1** --- Enumerated value for the Y axis. Returned by :ref:`max_axis_index<class_Vector4_method_max_axis_index>` and :ref:`min_axis_index<class_Vector4_method_min_axis_index>`.

- **AXIS_Z** = **2** --- Enumerated value for the Z axis. Returned by :ref:`max_axis_index<class_Vector4_method_max_axis_index>` and :ref:`min_axis_index<class_Vector4_method_min_axis_index>`.

- **AXIS_W** = **3** --- Enumerated value for the W axis. Returned by :ref:`max_axis_index<class_Vector4_method_max_axis_index>` and :ref:`min_axis_index<class_Vector4_method_min_axis_index>`.

- **ZERO** = **Vector4(0, 0, 0, 0)** --- Zero vector, a vector with all components set to ``0``.

- **ONE** = **Vector4(1, 1, 1, 1)** --- One vector, a vector with all components set to ``1``.

- **INF** = **Vector4(inf, inf, inf, inf)** --- Infinity vector, a vector with all components set to :ref:`@GDScript.INF<class_@GDScript_constant_INF>`.

Property Descriptions
---------------------

.. _class_Vector4_property_w:

- :ref:`float<class_float>` **w**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

The vector's W component. Also accessible by using the index position ``[3]``.

----

.. _class_Vector4_property_x:

- :ref:`float<class_float>` **x**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

The vector's X component. Also accessible by using the index position ``[0]``.

----

.. _class_Vector4_property_y:

- :ref:`float<class_float>` **y**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

The vector's Y component. Also accessible by using the index position ``[1]``.

----

.. _class_Vector4_property_z:

- :ref:`float<class_float>` **z**

+-----------+---------+
| *Default* | ``0.0`` |
+-----------+---------+

The vector's Z component. Also accessible by using the index position ``[2]``.

Constructor Descriptions
------------------------

.. _class_Vector4_constructor_Vector4:

- :ref:`Vector4<class_Vector4>` **Vector4** **(** **)**

Constructs a default-initialized ``Vector4`` with all components set to ``0``.

----

- :ref:`Vector4<class_Vector4>` **Vector4** **(** :ref:`Vector4<class_Vector4>` from **)**

Constructs a ``Vector4`` as a copy of the given ``Vector4``.

----

- :ref:`Vector4<class_Vector4>` **Vector4** **(** :ref:`Vector4i<class_Vector4i>` from **)**

Constructs a new ``Vector4`` from :ref:`Vector4i<class_Vector4i>`.

----

- :ref:`Vector4<class_Vector4>` **Vector4** **(** :ref:`float<class_float>` x, :ref:`float<class_float>` y, :ref:`float<class_float>` z, :ref:`float<class_float>` w **)**

Returns a ``Vector4`` with the given components.

Method Descriptions
-------------------

.. _class_Vector4_method_abs:

- :ref:`Vector4<class_Vector4>` **abs** **(** **)** |const|

Returns a new vector with all components in absolute values (i.e. positive).

----

.. _class_Vector4_method_ceil:

- :ref:`Vector4<class_Vector4>` **ceil** **(** **)** |const|

Returns a new vector with all components rounded up (towards positive infinity).

----

.. _class_Vector4_method_clamp:

- :ref:`Vector4<class_Vector4>` **clamp** **(** :ref:`Vector4<class_Vector4>` min, :ref:`Vector4<class_Vector4>` max **)** |const|

Returns a new vector with all components clamped between the components of ``min`` and ``max``, by running :ref:`@GlobalScope.clamp<class_@GlobalScope_method_clamp>` on each component.

----

.. _class_Vector4_method_cubic_interpolate:

- :ref:`Vector4<class_Vector4>` **cubic_interpolate** **(** :ref:`Vector4<class_Vector4>` b, :ref:`Vector4<class_Vector4>` pre_a, :ref:`Vector4<class_Vector4>` post_b, :ref:`float<class_float>` weight **)** |const|

Performs a cubic interpolation between this vector and ``b`` using ``pre_a`` and ``post_b`` as handles, and returns the result at position ``weight``. ``weight`` is on the range of 0.0 to 1.0, representing the amount of interpolation.

----

.. _class_Vector4_method_cubic_interpolate_in_time:

- :ref:`Vector4<class_Vector4>` **cubic_interpolate_in_time** **(** :ref:`Vector4<class_Vector4>` b, :ref:`Vector4<class_Vector4>` pre_a, :ref:`Vector4<class_Vector4>` post_b, :ref:`float<class_float>` weight, :ref:`float<class_float>` b_t, :ref:`float<class_float>` pre_a_t, :ref:`float<class_float>` post_b_t **)** |const|

Performs a cubic interpolation between this vector and ``b`` using ``pre_a`` and ``post_b`` as handles, and returns the result at position ``weight``. ``weight`` is on the range of 0.0 to 1.0, representing the amount of interpolation.

It can perform smoother interpolation than ``cubic_interpolate()`` by the time values.

----

.. _class_Vector4_method_direction_to:

- :ref:`Vector4<class_Vector4>` **direction_to** **(** :ref:`Vector4<class_Vector4>` to **)** |const|

Returns the normalized vector pointing from this vector to ``to``. This is equivalent to using ``(b - a).normalized()``.

----

.. _class_Vector4_method_distance_squared_to:

- :ref:`float<class_float>` **distance_squared_to** **(** :ref:`Vector4<class_Vector4>` to **)** |const|

Returns the squared distance between this vector and ``to``.

This method runs faster than :ref:`distance_to<class_Vector4_method_distance_to>`, so prefer it if you need to compare vectors or need the squared distance for some formula.

----

.. _class_Vector4_method_distance_to:

- :ref:`float<class_float>` **distance_to** **(** :ref:`Vector4<class_Vector4>` to **)** |const|

Returns the distance between this vector and ``to``.

----

.. _class_Vector4_method_dot:

- :ref:`float<class_float>` **dot** **(** :ref:`Vector4<class_Vector4>` with **)** |const|

Returns the dot product of this vector and ``with``.

----

.. _class_Vector4_method_floor:

- :ref:`Vector4<class_Vector4>` **floor** **(** **)** |const|

Returns a new vector with all components rounded down (towards negative infinity).

----

.. _class_Vector4_method_inverse:

- :ref:`Vector4<class_Vector4>` **inverse** **(** **)** |const|

Returns the inverse of the vector. This is the same as ``Vector4(1.0 / v.x, 1.0 / v.y, 1.0 / v.z, 1.0 / v.w)``.

----

.. _class_Vector4_method_is_equal_approx:

- :ref:`bool<class_bool>` **is_equal_approx** **(** :ref:`Vector4<class_Vector4>` with **)** |const|

Returns ``true`` if this vector and ``with`` are approximately equal, by running :ref:`@GlobalScope.is_equal_approx<class_@GlobalScope_method_is_equal_approx>` on each component.

----

.. _class_Vector4_method_is_normalized:

- :ref:`bool<class_bool>` **is_normalized** **(** **)** |const|

Returns ``true`` if the vector is normalized, i.e. its length is equal to 1.

----

.. _class_Vector4_method_length:

- :ref:`float<class_float>` **length** **(** **)** |const|

Returns the length (magnitude) of this vector.

----

.. _class_Vector4_method_length_squared:

- :ref:`float<class_float>` **length_squared** **(** **)** |const|

Returns the squared length (squared magnitude) of this vector. This method runs faster than :ref:`length<class_Vector4_method_length>`.

----

.. _class_Vector4_method_lerp:

- :ref:`Vector4<class_Vector4>` **lerp** **(** :ref:`Vector4<class_Vector4>` to, :ref:`float<class_float>` weight **)** |const|

Returns the result of the linear interpolation between this vector and ``to`` by amount ``weight``. ``weight`` is on the range of ``0.0`` to ``1.0``, representing the amount of interpolation.

----

.. _class_Vector4_method_max_axis_index:

- :ref:`int<class_int>` **max_axis_index** **(** **)** |const|

Returns the axis of the vector's highest value. See ``AXIS_*`` constants. If all components are equal, this method returns :ref:`AXIS_X<class_Vector4_constant_AXIS_X>`.

----

.. _class_Vector4_method_min_axis_index:

- :ref:`int<class_int>` **min_axis_index** **(** **)** |const|

Returns the axis of the vector's lowest value. See ``AXIS_*`` constants. If all components are equal, this method returns :ref:`AXIS_W<class_Vector4_constant_AXIS_W>`.

----

.. _class_Vector4_method_normalized:

- :ref:`Vector4<class_Vector4>` **normalized** **(** **)** |const|

Returns the vector scaled to unit length. Equivalent to ``v / v.length()``.

----

.. _class_Vector4_method_posmod:

- :ref:`Vector4<class_Vector4>` **posmod** **(** :ref:`float<class_float>` mod **)** |const|

Returns a vector composed of the :ref:`@GlobalScope.fposmod<class_@GlobalScope_method_fposmod>` of this vector's components and ``mod``.

----

.. _class_Vector4_method_posmodv:

- :ref:`Vector4<class_Vector4>` **posmodv** **(** :ref:`Vector4<class_Vector4>` modv **)** |const|

Returns a vector composed of the :ref:`@GlobalScope.fposmod<class_@GlobalScope_method_fposmod>` of this vector's components and ``modv``'s components.

----

.. _class_Vector4_method_round:

- :ref:`Vector4<class_Vector4>` **round** **(** **)** |const|

Returns a new vector with all components rounded to the nearest integer, with halfway cases rounded away from zero.

----

.. _class_Vector4_method_sign:

- :ref:`Vector4<class_Vector4>` **sign** **(** **)** |const|

Returns a new vector with each component set to one or negative one, depending on the signs of the components, or zero if the component is zero, by calling :ref:`@GlobalScope.sign<class_@GlobalScope_method_sign>` on each component.

----

.. _class_Vector4_method_snapped:

- :ref:`Vector4<class_Vector4>` **snapped** **(** :ref:`Vector4<class_Vector4>` step **)** |const|

Returns this vector with each component snapped to the nearest multiple of ``step``. This can also be used to round to an arbitrary number of decimals.

Operator Descriptions
---------------------

.. _class_Vector4_operator_neq_bool:

- :ref:`bool<class_bool>` **operator !=** **(** :ref:`Vector4<class_Vector4>` right **)**

Returns ``true`` if the vectors are not equal.

\ **Note:** Due to floating-point precision errors, consider using :ref:`is_equal_approx<class_Vector4_method_is_equal_approx>` instead, which is more reliable.

----

.. _class_Vector4_operator_mul_Vector4:

- :ref:`Vector4<class_Vector4>` **operator *** **(** :ref:`Projection<class_Projection>` right **)**

Inversely transforms (multiplies) the ``Vector4`` by the given :ref:`Projection<class_Projection>` matrix.

----

- :ref:`Vector4<class_Vector4>` **operator *** **(** :ref:`Vector4<class_Vector4>` right **)**

Multiplies each component of the ``Vector4`` by the components of the given ``Vector4``.

::

    print(Vector4(10, 20, 30, 40) * Vector4(3, 4, 5, 6)) # Prints "(30, 80, 150, 240)"

----

- :ref:`Vector4<class_Vector4>` **operator *** **(** :ref:`float<class_float>` right **)**

Multiplies each component of the ``Vector4`` by the given :ref:`float<class_float>`.

::

    print(Vector4(10, 20, 30, 40) * 2) # Prints "(20, 40, 60, 80)"

----

- :ref:`Vector4<class_Vector4>` **operator *** **(** :ref:`int<class_int>` right **)**

Multiplies each component of the ``Vector4`` by the given :ref:`int<class_int>`.

----

.. _class_Vector4_operator_sum_Vector4:

- :ref:`Vector4<class_Vector4>` **operator +** **(** :ref:`Vector4<class_Vector4>` right **)**

Adds each component of the ``Vector4`` by the components of the given ``Vector4``.

::

    print(Vector4(10, 20, 30, 40) + Vector4(3, 4, 5, 6)) # Prints "(13, 24, 35, 46)"

----

.. _class_Vector4_operator_dif_Vector4:

- :ref:`Vector4<class_Vector4>` **operator -** **(** :ref:`Vector4<class_Vector4>` right **)**

Subtracts each component of the ``Vector4`` by the components of the given ``Vector4``.

::

    print(Vector4(10, 20, 30, 40) - Vector4(3, 4, 5, 6)) # Prints "(7, 16, 25, 34)"

----

.. _class_Vector4_operator_div_Vector4:

- :ref:`Vector4<class_Vector4>` **operator /** **(** :ref:`Vector4<class_Vector4>` right **)**

Divides each component of the ``Vector4`` by the components of the given ``Vector4``.

::

    print(Vector4(10, 20, 30, 40) / Vector4(2, 5, 3, 4)) # Prints "(5, 4, 10, 10)"

----

- :ref:`Vector4<class_Vector4>` **operator /** **(** :ref:`float<class_float>` right **)**

Divides each component of the ``Vector4`` by the given :ref:`float<class_float>`.

::

    print(Vector4(10, 20, 30, 40) / 2 # Prints "(5, 10, 15, 20)"

----

- :ref:`Vector4<class_Vector4>` **operator /** **(** :ref:`int<class_int>` right **)**

Divides each component of the ``Vector4`` by the given :ref:`int<class_int>`.

----

.. _class_Vector4_operator_lt_bool:

- :ref:`bool<class_bool>` **operator <** **(** :ref:`Vector4<class_Vector4>` right **)**

Compares two ``Vector4`` vectors by first checking if the X value of the left vector is less than the X value of the ``right`` vector. If the X values are exactly equal, then it repeats this check with the Y values of the two vectors, Z values of the two vectors, and then with the W values. This operator is useful for sorting vectors.

----

.. _class_Vector4_operator_lte_bool:

- :ref:`bool<class_bool>` **operator <=** **(** :ref:`Vector4<class_Vector4>` right **)**

Compares two ``Vector4`` vectors by first checking if the X value of the left vector is less than or equal to the X value of the ``right`` vector. If the X values are exactly equal, then it repeats this check with the Y values of the two vectors, Z values of the two vectors, and then with the W values. This operator is useful for sorting vectors.

----

.. _class_Vector4_operator_eq_bool:

- :ref:`bool<class_bool>` **operator ==** **(** :ref:`Vector4<class_Vector4>` right **)**

Returns ``true`` if the vectors are exactly equal.

\ **Note:** Due to floating-point precision errors, consider using :ref:`is_equal_approx<class_Vector4_method_is_equal_approx>` instead, which is more reliable.

----

.. _class_Vector4_operator_gt_bool:

- :ref:`bool<class_bool>` **operator >** **(** :ref:`Vector4<class_Vector4>` right **)**

Compares two ``Vector4`` vectors by first checking if the X value of the left vector is greater than the X value of the ``right`` vector. If the X values are exactly equal, then it repeats this check with the Y values of the two vectors, Z values of the two vectors, and then with the W values. This operator is useful for sorting vectors.

----

.. _class_Vector4_operator_gte_bool:

- :ref:`bool<class_bool>` **operator >=** **(** :ref:`Vector4<class_Vector4>` right **)**

Compares two ``Vector4`` vectors by first checking if the X value of the left vector is greater than or equal to the X value of the ``right`` vector. If the X values are exactly equal, then it repeats this check with the Y values of the two vectors, Z values of the two vectors, and then with the W values. This operator is useful for sorting vectors.

----

.. _class_Vector4_operator_idx_float:

- :ref:`float<class_float>` **operator []** **(** :ref:`int<class_int>` index **)**

Access vector components using their ``index``. ``v[0]`` is equivalent to ``v.x``, ``v[1]`` is equivalent to ``v.y``, ``v[2]`` is equivalent to ``v.z``, and ``v[3]`` is equivalent to ``v.w``.

----

.. _class_Vector4_operator_unplus_Vector4:

- :ref:`Vector4<class_Vector4>` **operator unary+** **(** **)**

Returns the same value as if the ``+`` was not there. Unary ``+`` does nothing, but sometimes it can make your code more readable.

----

.. _class_Vector4_operator_unminus_Vector4:

- :ref:`Vector4<class_Vector4>` **operator unary-** **(** **)**

Returns the negative value of the ``Vector4``. This is the same as writing ``Vector4(-v.x, -v.y, -v.z, -v.w)``. This operation flips the direction of the vector while keeping the same magnitude. With floats, the number zero can be either positive or negative.

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
