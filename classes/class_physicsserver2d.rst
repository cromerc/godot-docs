:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/PhysicsServer2D.xml.

.. _class_PhysicsServer2D:

PhysicsServer2D
===============

**Inherits:** :ref:`Object<class_Object>`

Server interface for low-level 2D physics access.

Description
-----------

PhysicsServer2D is the server responsible for all 2D physics. It can create many kinds of physics objects, but does not insert them on the node tree.

Methods
-------

+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_add_shape<class_PhysicsServer2D_method_area_add_shape>` **(** :ref:`RID<class_RID>` area, :ref:`RID<class_RID>` shape, :ref:`Transform2D<class_Transform2D>` transform=Transform2D(1, 0, 0, 1, 0, 0), :ref:`bool<class_bool>` disabled=false **)**                                          |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_attach_canvas_instance_id<class_PhysicsServer2D_method_area_attach_canvas_instance_id>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` id **)**                                                                                                                                    |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_attach_object_instance_id<class_PhysicsServer2D_method_area_attach_object_instance_id>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` id **)**                                                                                                                                    |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_clear_shapes<class_PhysicsServer2D_method_area_clear_shapes>` **(** :ref:`RID<class_RID>` area **)**                                                                                                                                                                                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`area_create<class_PhysicsServer2D_method_area_create>` **(** **)**                                                                                                                                                                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`area_get_canvas_instance_id<class_PhysicsServer2D_method_area_get_canvas_instance_id>` **(** :ref:`RID<class_RID>` area **)** |const|                                                                                                                                                            |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`area_get_object_instance_id<class_PhysicsServer2D_method_area_get_object_instance_id>` **(** :ref:`RID<class_RID>` area **)** |const|                                                                                                                                                            |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                                     | :ref:`area_get_param<class_PhysicsServer2D_method_area_get_param>` **(** :ref:`RID<class_RID>` area, :ref:`AreaParameter<enum_PhysicsServer2D_AreaParameter>` param **)** |const|                                                                                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`area_get_shape<class_PhysicsServer2D_method_area_get_shape>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx **)** |const|                                                                                                                                                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`area_get_shape_count<class_PhysicsServer2D_method_area_get_shape_count>` **(** :ref:`RID<class_RID>` area **)** |const|                                                                                                                                                                          |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>`                             | :ref:`area_get_shape_transform<class_PhysicsServer2D_method_area_get_shape_transform>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx **)** |const|                                                                                                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`area_get_space<class_PhysicsServer2D_method_area_get_space>` **(** :ref:`RID<class_RID>` area **)** |const|                                                                                                                                                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>`                             | :ref:`area_get_transform<class_PhysicsServer2D_method_area_get_transform>` **(** :ref:`RID<class_RID>` area **)** |const|                                                                                                                                                                              |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_remove_shape<class_PhysicsServer2D_method_area_remove_shape>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx **)**                                                                                                                                                       |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_area_monitor_callback<class_PhysicsServer2D_method_area_set_area_monitor_callback>` **(** :ref:`RID<class_RID>` area, :ref:`Callable<class_Callable>` callback **)**                                                                                                                    |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_collision_layer<class_PhysicsServer2D_method_area_set_collision_layer>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` layer **)**                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_collision_mask<class_PhysicsServer2D_method_area_set_collision_mask>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` mask **)**                                                                                                                                                |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_monitor_callback<class_PhysicsServer2D_method_area_set_monitor_callback>` **(** :ref:`RID<class_RID>` area, :ref:`Callable<class_Callable>` callback **)**                                                                                                                              |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_monitorable<class_PhysicsServer2D_method_area_set_monitorable>` **(** :ref:`RID<class_RID>` area, :ref:`bool<class_bool>` monitorable **)**                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_param<class_PhysicsServer2D_method_area_set_param>` **(** :ref:`RID<class_RID>` area, :ref:`AreaParameter<enum_PhysicsServer2D_AreaParameter>` param, :ref:`Variant<class_Variant>` value **)**                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_shape<class_PhysicsServer2D_method_area_set_shape>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx, :ref:`RID<class_RID>` shape **)**                                                                                                                                |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_shape_disabled<class_PhysicsServer2D_method_area_set_shape_disabled>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` disabled **)**                                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_shape_transform<class_PhysicsServer2D_method_area_set_shape_transform>` **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx, :ref:`Transform2D<class_Transform2D>` transform **)**                                                                                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_space<class_PhysicsServer2D_method_area_set_space>` **(** :ref:`RID<class_RID>` area, :ref:`RID<class_RID>` space **)**                                                                                                                                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`area_set_transform<class_PhysicsServer2D_method_area_set_transform>` **(** :ref:`RID<class_RID>` area, :ref:`Transform2D<class_Transform2D>` transform **)**                                                                                                                                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_add_collision_exception<class_PhysicsServer2D_method_body_add_collision_exception>` **(** :ref:`RID<class_RID>` body, :ref:`RID<class_RID>` excepted_body **)**                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_add_constant_central_force<class_PhysicsServer2D_method_body_add_constant_central_force>` **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force **)**                                                                                                                       |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_add_constant_force<class_PhysicsServer2D_method_body_add_constant_force>` **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force, :ref:`Vector2<class_Vector2>` position=Vector2(0, 0) **)**                                                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_add_constant_torque<class_PhysicsServer2D_method_body_add_constant_torque>` **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` torque **)**                                                                                                                                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_add_shape<class_PhysicsServer2D_method_body_add_shape>` **(** :ref:`RID<class_RID>` body, :ref:`RID<class_RID>` shape, :ref:`Transform2D<class_Transform2D>` transform=Transform2D(1, 0, 0, 1, 0, 0), :ref:`bool<class_bool>` disabled=false **)**                                          |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_apply_central_force<class_PhysicsServer2D_method_body_apply_central_force>` **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force **)**                                                                                                                                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_apply_central_impulse<class_PhysicsServer2D_method_body_apply_central_impulse>` **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` impulse **)**                                                                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_apply_force<class_PhysicsServer2D_method_body_apply_force>` **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force, :ref:`Vector2<class_Vector2>` position=Vector2(0, 0) **)**                                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_apply_impulse<class_PhysicsServer2D_method_body_apply_impulse>` **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` impulse, :ref:`Vector2<class_Vector2>` position=Vector2(0, 0) **)**                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_apply_torque<class_PhysicsServer2D_method_body_apply_torque>` **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` torque **)**                                                                                                                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_apply_torque_impulse<class_PhysicsServer2D_method_body_apply_torque_impulse>` **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` impulse **)**                                                                                                                                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_attach_canvas_instance_id<class_PhysicsServer2D_method_body_attach_canvas_instance_id>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` id **)**                                                                                                                                    |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_attach_object_instance_id<class_PhysicsServer2D_method_body_attach_object_instance_id>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` id **)**                                                                                                                                    |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_clear_shapes<class_PhysicsServer2D_method_body_clear_shapes>` **(** :ref:`RID<class_RID>` body **)**                                                                                                                                                                                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`body_create<class_PhysicsServer2D_method_body_create>` **(** **)**                                                                                                                                                                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`body_get_canvas_instance_id<class_PhysicsServer2D_method_body_get_canvas_instance_id>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                            |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`body_get_collision_layer<class_PhysicsServer2D_method_body_get_collision_layer>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                                  |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`body_get_collision_mask<class_PhysicsServer2D_method_body_get_collision_mask>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                                    |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                         | :ref:`body_get_collision_priority<class_PhysicsServer2D_method_body_get_collision_priority>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                            |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Vector2<class_Vector2>`                                     | :ref:`body_get_constant_force<class_PhysicsServer2D_method_body_get_constant_force>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                                    |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                         | :ref:`body_get_constant_torque<class_PhysicsServer2D_method_body_get_constant_torque>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                                  |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`CCDMode<enum_PhysicsServer2D_CCDMode>`                      | :ref:`body_get_continuous_collision_detection_mode<class_PhysicsServer2D_method_body_get_continuous_collision_detection_mode>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                          |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PhysicsDirectBodyState2D<class_PhysicsDirectBodyState2D>`   | :ref:`body_get_direct_state<class_PhysicsServer2D_method_body_get_direct_state>` **(** :ref:`RID<class_RID>` body **)**                                                                                                                                                                                |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`body_get_max_contacts_reported<class_PhysicsServer2D_method_body_get_max_contacts_reported>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`BodyMode<enum_PhysicsServer2D_BodyMode>`                    | :ref:`body_get_mode<class_PhysicsServer2D_method_body_get_mode>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                                                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`body_get_object_instance_id<class_PhysicsServer2D_method_body_get_object_instance_id>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                            |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                                     | :ref:`body_get_param<class_PhysicsServer2D_method_body_get_param>` **(** :ref:`RID<class_RID>` body, :ref:`BodyParameter<enum_PhysicsServer2D_BodyParameter>` param **)** |const|                                                                                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`body_get_shape<class_PhysicsServer2D_method_body_get_shape>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx **)** |const|                                                                                                                                                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`body_get_shape_count<class_PhysicsServer2D_method_body_get_shape_count>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                                          |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Transform2D<class_Transform2D>`                             | :ref:`body_get_shape_transform<class_PhysicsServer2D_method_body_get_shape_transform>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx **)** |const|                                                                                                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`body_get_space<class_PhysicsServer2D_method_body_get_space>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                                     | :ref:`body_get_state<class_PhysicsServer2D_method_body_get_state>` **(** :ref:`RID<class_RID>` body, :ref:`BodyState<enum_PhysicsServer2D_BodyState>` state **)** |const|                                                                                                                              |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                           | :ref:`body_is_omitting_force_integration<class_PhysicsServer2D_method_body_is_omitting_force_integration>` **(** :ref:`RID<class_RID>` body **)** |const|                                                                                                                                              |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_remove_collision_exception<class_PhysicsServer2D_method_body_remove_collision_exception>` **(** :ref:`RID<class_RID>` body, :ref:`RID<class_RID>` excepted_body **)**                                                                                                                       |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_remove_shape<class_PhysicsServer2D_method_body_remove_shape>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx **)**                                                                                                                                                       |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_reset_mass_properties<class_PhysicsServer2D_method_body_reset_mass_properties>` **(** :ref:`RID<class_RID>` body **)**                                                                                                                                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_axis_velocity<class_PhysicsServer2D_method_body_set_axis_velocity>` **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` axis_velocity **)**                                                                                                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_collision_layer<class_PhysicsServer2D_method_body_set_collision_layer>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` layer **)**                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_collision_mask<class_PhysicsServer2D_method_body_set_collision_mask>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` mask **)**                                                                                                                                                |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_collision_priority<class_PhysicsServer2D_method_body_set_collision_priority>` **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` priority **)**                                                                                                                                |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_constant_force<class_PhysicsServer2D_method_body_set_constant_force>` **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force **)**                                                                                                                                       |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_constant_torque<class_PhysicsServer2D_method_body_set_constant_torque>` **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` torque **)**                                                                                                                                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_continuous_collision_detection_mode<class_PhysicsServer2D_method_body_set_continuous_collision_detection_mode>` **(** :ref:`RID<class_RID>` body, :ref:`CCDMode<enum_PhysicsServer2D_CCDMode>` mode **)**                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_force_integration_callback<class_PhysicsServer2D_method_body_set_force_integration_callback>` **(** :ref:`RID<class_RID>` body, :ref:`Callable<class_Callable>` callable, :ref:`Variant<class_Variant>` userdata=null **)**                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_max_contacts_reported<class_PhysicsServer2D_method_body_set_max_contacts_reported>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` amount **)**                                                                                                                                |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_mode<class_PhysicsServer2D_method_body_set_mode>` **(** :ref:`RID<class_RID>` body, :ref:`BodyMode<enum_PhysicsServer2D_BodyMode>` mode **)**                                                                                                                                           |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_omit_force_integration<class_PhysicsServer2D_method_body_set_omit_force_integration>` **(** :ref:`RID<class_RID>` body, :ref:`bool<class_bool>` enable **)**                                                                                                                            |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_param<class_PhysicsServer2D_method_body_set_param>` **(** :ref:`RID<class_RID>` body, :ref:`BodyParameter<enum_PhysicsServer2D_BodyParameter>` param, :ref:`Variant<class_Variant>` value **)**                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_shape<class_PhysicsServer2D_method_body_set_shape>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx, :ref:`RID<class_RID>` shape **)**                                                                                                                                |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_shape_as_one_way_collision<class_PhysicsServer2D_method_body_set_shape_as_one_way_collision>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` enable, :ref:`float<class_float>` margin **)**                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_shape_disabled<class_PhysicsServer2D_method_body_set_shape_disabled>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` disabled **)**                                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_shape_transform<class_PhysicsServer2D_method_body_set_shape_transform>` **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx, :ref:`Transform2D<class_Transform2D>` transform **)**                                                                                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_space<class_PhysicsServer2D_method_body_set_space>` **(** :ref:`RID<class_RID>` body, :ref:`RID<class_RID>` space **)**                                                                                                                                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`body_set_state<class_PhysicsServer2D_method_body_set_state>` **(** :ref:`RID<class_RID>` body, :ref:`BodyState<enum_PhysicsServer2D_BodyState>` state, :ref:`Variant<class_Variant>` value **)**                                                                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                           | :ref:`body_test_motion<class_PhysicsServer2D_method_body_test_motion>` **(** :ref:`RID<class_RID>` body, :ref:`PhysicsTestMotionParameters2D<class_PhysicsTestMotionParameters2D>` parameters, :ref:`PhysicsTestMotionResult2D<class_PhysicsTestMotionResult2D>` result=null **)**                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`capsule_shape_create<class_PhysicsServer2D_method_capsule_shape_create>` **(** **)**                                                                                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`circle_shape_create<class_PhysicsServer2D_method_circle_shape_create>` **(** **)**                                                                                                                                                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`concave_polygon_shape_create<class_PhysicsServer2D_method_concave_polygon_shape_create>` **(** **)**                                                                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`convex_polygon_shape_create<class_PhysicsServer2D_method_convex_polygon_shape_create>` **(** **)**                                                                                                                                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                         | :ref:`damped_spring_joint_get_param<class_PhysicsServer2D_method_damped_spring_joint_get_param>` **(** :ref:`RID<class_RID>` joint, :ref:`DampedSpringParam<enum_PhysicsServer2D_DampedSpringParam>` param **)** |const|                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`damped_spring_joint_set_param<class_PhysicsServer2D_method_damped_spring_joint_set_param>` **(** :ref:`RID<class_RID>` joint, :ref:`DampedSpringParam<enum_PhysicsServer2D_DampedSpringParam>` param, :ref:`float<class_float>` value **)**                                                      |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`free_rid<class_PhysicsServer2D_method_free_rid>` **(** :ref:`RID<class_RID>` rid **)**                                                                                                                                                                                                           |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`int<class_int>`                                             | :ref:`get_process_info<class_PhysicsServer2D_method_get_process_info>` **(** :ref:`ProcessInfo<enum_PhysicsServer2D_ProcessInfo>` process_info **)**                                                                                                                                                   |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`joint_clear<class_PhysicsServer2D_method_joint_clear>` **(** :ref:`RID<class_RID>` joint **)**                                                                                                                                                                                                   |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`joint_create<class_PhysicsServer2D_method_joint_create>` **(** **)**                                                                                                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                         | :ref:`joint_get_param<class_PhysicsServer2D_method_joint_get_param>` **(** :ref:`RID<class_RID>` joint, :ref:`JointParam<enum_PhysicsServer2D_JointParam>` param **)** |const|                                                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`JointType<enum_PhysicsServer2D_JointType>`                  | :ref:`joint_get_type<class_PhysicsServer2D_method_joint_get_type>` **(** :ref:`RID<class_RID>` joint **)** |const|                                                                                                                                                                                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`joint_make_damped_spring<class_PhysicsServer2D_method_joint_make_damped_spring>` **(** :ref:`RID<class_RID>` joint, :ref:`Vector2<class_Vector2>` anchor_a, :ref:`Vector2<class_Vector2>` anchor_b, :ref:`RID<class_RID>` body_a, :ref:`RID<class_RID>` body_b **)**                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`joint_make_groove<class_PhysicsServer2D_method_joint_make_groove>` **(** :ref:`RID<class_RID>` joint, :ref:`Vector2<class_Vector2>` groove1_a, :ref:`Vector2<class_Vector2>` groove2_a, :ref:`Vector2<class_Vector2>` anchor_b, :ref:`RID<class_RID>` body_a, :ref:`RID<class_RID>` body_b **)** |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`joint_make_pin<class_PhysicsServer2D_method_joint_make_pin>` **(** :ref:`RID<class_RID>` joint, :ref:`Vector2<class_Vector2>` anchor, :ref:`RID<class_RID>` body_a, :ref:`RID<class_RID>` body_b **)**                                                                                           |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`joint_set_param<class_PhysicsServer2D_method_joint_set_param>` **(** :ref:`RID<class_RID>` joint, :ref:`JointParam<enum_PhysicsServer2D_JointParam>` param, :ref:`float<class_float>` value **)**                                                                                                |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`rectangle_shape_create<class_PhysicsServer2D_method_rectangle_shape_create>` **(** **)**                                                                                                                                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`segment_shape_create<class_PhysicsServer2D_method_segment_shape_create>` **(** **)**                                                                                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`separation_ray_shape_create<class_PhysicsServer2D_method_separation_ray_shape_create>` **(** **)**                                                                                                                                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`set_active<class_PhysicsServer2D_method_set_active>` **(** :ref:`bool<class_bool>` active **)**                                                                                                                                                                                                  |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`Variant<class_Variant>`                                     | :ref:`shape_get_data<class_PhysicsServer2D_method_shape_get_data>` **(** :ref:`RID<class_RID>` shape **)** |const|                                                                                                                                                                                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`ShapeType<enum_PhysicsServer2D_ShapeType>`                  | :ref:`shape_get_type<class_PhysicsServer2D_method_shape_get_type>` **(** :ref:`RID<class_RID>` shape **)** |const|                                                                                                                                                                                     |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`shape_set_data<class_PhysicsServer2D_method_shape_set_data>` **(** :ref:`RID<class_RID>` shape, :ref:`Variant<class_Variant>` data **)**                                                                                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`space_create<class_PhysicsServer2D_method_space_create>` **(** **)**                                                                                                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`PhysicsDirectSpaceState2D<class_PhysicsDirectSpaceState2D>` | :ref:`space_get_direct_state<class_PhysicsServer2D_method_space_get_direct_state>` **(** :ref:`RID<class_RID>` space **)**                                                                                                                                                                             |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`float<class_float>`                                         | :ref:`space_get_param<class_PhysicsServer2D_method_space_get_param>` **(** :ref:`RID<class_RID>` space, :ref:`SpaceParameter<enum_PhysicsServer2D_SpaceParameter>` param **)** |const|                                                                                                                 |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`bool<class_bool>`                                           | :ref:`space_is_active<class_PhysicsServer2D_method_space_is_active>` **(** :ref:`RID<class_RID>` space **)** |const|                                                                                                                                                                                   |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`space_set_active<class_PhysicsServer2D_method_space_set_active>` **(** :ref:`RID<class_RID>` space, :ref:`bool<class_bool>` active **)**                                                                                                                                                         |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| void                                                              | :ref:`space_set_param<class_PhysicsServer2D_method_space_set_param>` **(** :ref:`RID<class_RID>` space, :ref:`SpaceParameter<enum_PhysicsServer2D_SpaceParameter>` param, :ref:`float<class_float>` value **)**                                                                                        |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| :ref:`RID<class_RID>`                                             | :ref:`world_boundary_shape_create<class_PhysicsServer2D_method_world_boundary_shape_create>` **(** **)**                                                                                                                                                                                               |
+-------------------------------------------------------------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+

Enumerations
------------

.. _enum_PhysicsServer2D_SpaceParameter:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_CONTACT_RECYCLE_RADIUS:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_CONTACT_MAX_SEPARATION:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_CONTACT_MAX_ALLOWED_PENETRATION:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_CONTACT_DEFAULT_BIAS:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_BODY_TIME_TO_SLEEP:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS:

.. _class_PhysicsServer2D_constant_SPACE_PARAM_SOLVER_ITERATIONS:

enum **SpaceParameter**:

- **SPACE_PARAM_CONTACT_RECYCLE_RADIUS** = **0** --- Constant to set/get the maximum distance a pair of bodies has to move before their collision status has to be recalculated.

- **SPACE_PARAM_CONTACT_MAX_SEPARATION** = **1** --- Constant to set/get the maximum distance a shape can be from another before they are considered separated and the contact is discarded.

- **SPACE_PARAM_CONTACT_MAX_ALLOWED_PENETRATION** = **2** --- Constant to set/get the maximum distance a shape can penetrate another shape before it is considered a collision.

- **SPACE_PARAM_CONTACT_DEFAULT_BIAS** = **3** --- Constant to set/get the default solver bias for all physics contacts. A solver bias is a factor controlling how much two objects "rebound", after overlapping, to avoid leaving them in that state because of numerical imprecision.

- **SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD** = **4** --- Constant to set/get the threshold linear velocity of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after the time given.

- **SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD** = **5** --- Constant to set/get the threshold angular velocity of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after the time given.

- **SPACE_PARAM_BODY_TIME_TO_SLEEP** = **6** --- Constant to set/get the maximum time of activity. A body marked as potentially inactive for both linear and angular velocity will be put to sleep after this time.

- **SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS** = **7** --- Constant to set/get the default solver bias for all physics constraints. A solver bias is a factor controlling how much two objects "rebound", after violating a constraint, to avoid leaving them in that state because of numerical imprecision.

- **SPACE_PARAM_SOLVER_ITERATIONS** = **8** --- Constant to set/get the number of solver iterations for all contacts and constraints. The greater the number of iterations, the more accurate the collisions will be. However, a greater number of iterations requires more CPU power, which can decrease performance.

----

.. _enum_PhysicsServer2D_ShapeType:

.. _class_PhysicsServer2D_constant_SHAPE_WORLD_BOUNDARY:

.. _class_PhysicsServer2D_constant_SHAPE_SEPARATION_RAY:

.. _class_PhysicsServer2D_constant_SHAPE_SEGMENT:

.. _class_PhysicsServer2D_constant_SHAPE_CIRCLE:

.. _class_PhysicsServer2D_constant_SHAPE_RECTANGLE:

.. _class_PhysicsServer2D_constant_SHAPE_CAPSULE:

.. _class_PhysicsServer2D_constant_SHAPE_CONVEX_POLYGON:

.. _class_PhysicsServer2D_constant_SHAPE_CONCAVE_POLYGON:

.. _class_PhysicsServer2D_constant_SHAPE_CUSTOM:

enum **ShapeType**:

- **SHAPE_WORLD_BOUNDARY** = **0** --- This is the constant for creating world boundary shapes. A world boundary shape is an *infinite* line with an origin point, and a normal. Thus, it can be used for front/behind checks.

- **SHAPE_SEPARATION_RAY** = **1** --- This is the constant for creating separation ray shapes. A separation ray is defined by a length and separates itself from what is touching its far endpoint. Useful for character controllers.

- **SHAPE_SEGMENT** = **2** --- This is the constant for creating segment shapes. A segment shape is a *finite* line from a point A to a point B. It can be checked for intersections.

- **SHAPE_CIRCLE** = **3** --- This is the constant for creating circle shapes. A circle shape only has a radius. It can be used for intersections and inside/outside checks.

- **SHAPE_RECTANGLE** = **4** --- This is the constant for creating rectangle shapes. A rectangle shape is defined by a width and a height. It can be used for intersections and inside/outside checks.

- **SHAPE_CAPSULE** = **5** --- This is the constant for creating capsule shapes. A capsule shape is defined by a radius and a length. It can be used for intersections and inside/outside checks.

- **SHAPE_CONVEX_POLYGON** = **6** --- This is the constant for creating convex polygon shapes. A polygon is defined by a list of points. It can be used for intersections and inside/outside checks. Unlike the :ref:`CollisionPolygon2D.polygon<class_CollisionPolygon2D_property_polygon>` property, polygons modified with :ref:`shape_set_data<class_PhysicsServer2D_method_shape_set_data>` do not verify that the points supplied form is a convex polygon.

- **SHAPE_CONCAVE_POLYGON** = **7** --- This is the constant for creating concave polygon shapes. A polygon is defined by a list of points. It can be used for intersections checks, but not for inside/outside checks.

- **SHAPE_CUSTOM** = **8** --- This constant is used internally by the engine. Any attempt to create this kind of shape results in an error.

----

.. _enum_PhysicsServer2D_AreaParameter:

.. _class_PhysicsServer2D_constant_AREA_PARAM_GRAVITY_OVERRIDE_MODE:

.. _class_PhysicsServer2D_constant_AREA_PARAM_GRAVITY:

.. _class_PhysicsServer2D_constant_AREA_PARAM_GRAVITY_VECTOR:

.. _class_PhysicsServer2D_constant_AREA_PARAM_GRAVITY_IS_POINT:

.. _class_PhysicsServer2D_constant_AREA_PARAM_GRAVITY_DISTANCE_SCALE:

.. _class_PhysicsServer2D_constant_AREA_PARAM_GRAVITY_POINT_ATTENUATION:

.. _class_PhysicsServer2D_constant_AREA_PARAM_LINEAR_DAMP_OVERRIDE_MODE:

.. _class_PhysicsServer2D_constant_AREA_PARAM_LINEAR_DAMP:

.. _class_PhysicsServer2D_constant_AREA_PARAM_ANGULAR_DAMP_OVERRIDE_MODE:

.. _class_PhysicsServer2D_constant_AREA_PARAM_ANGULAR_DAMP:

.. _class_PhysicsServer2D_constant_AREA_PARAM_PRIORITY:

enum **AreaParameter**:

- **AREA_PARAM_GRAVITY_OVERRIDE_MODE** = **0** --- Constant to set/get gravity override mode in an area. See :ref:`AreaSpaceOverrideMode<enum_PhysicsServer2D_AreaSpaceOverrideMode>` for possible values.

- **AREA_PARAM_GRAVITY** = **1** --- Constant to set/get gravity strength in an area.

- **AREA_PARAM_GRAVITY_VECTOR** = **2** --- Constant to set/get gravity vector/center in an area.

- **AREA_PARAM_GRAVITY_IS_POINT** = **3** --- Constant to set/get whether the gravity vector of an area is a direction, or a center point.

- **AREA_PARAM_GRAVITY_DISTANCE_SCALE** = **4** --- Constant to set/get the falloff factor for point gravity of an area. The greater this value is, the faster the strength of gravity decreases with the square of distance.

- **AREA_PARAM_GRAVITY_POINT_ATTENUATION** = **5** --- This constant was used to set/get the falloff factor for point gravity. It has been superseded by :ref:`AREA_PARAM_GRAVITY_DISTANCE_SCALE<class_PhysicsServer2D_constant_AREA_PARAM_GRAVITY_DISTANCE_SCALE>`.

- **AREA_PARAM_LINEAR_DAMP_OVERRIDE_MODE** = **6** --- Constant to set/get linear damping override mode in an area. See :ref:`AreaSpaceOverrideMode<enum_PhysicsServer2D_AreaSpaceOverrideMode>` for possible values.

- **AREA_PARAM_LINEAR_DAMP** = **7** --- Constant to set/get the linear damping factor of an area.

- **AREA_PARAM_ANGULAR_DAMP_OVERRIDE_MODE** = **8** --- Constant to set/get angular damping override mode in an area. See :ref:`AreaSpaceOverrideMode<enum_PhysicsServer2D_AreaSpaceOverrideMode>` for possible values.

- **AREA_PARAM_ANGULAR_DAMP** = **9** --- Constant to set/get the angular damping factor of an area.

- **AREA_PARAM_PRIORITY** = **10** --- Constant to set/get the priority (order of processing) of an area.

----

.. _enum_PhysicsServer2D_AreaSpaceOverrideMode:

.. _class_PhysicsServer2D_constant_AREA_SPACE_OVERRIDE_DISABLED:

.. _class_PhysicsServer2D_constant_AREA_SPACE_OVERRIDE_COMBINE:

.. _class_PhysicsServer2D_constant_AREA_SPACE_OVERRIDE_COMBINE_REPLACE:

.. _class_PhysicsServer2D_constant_AREA_SPACE_OVERRIDE_REPLACE:

.. _class_PhysicsServer2D_constant_AREA_SPACE_OVERRIDE_REPLACE_COMBINE:

enum **AreaSpaceOverrideMode**:

- **AREA_SPACE_OVERRIDE_DISABLED** = **0** --- This area does not affect gravity/damp. These are generally areas that exist only to detect collisions, and objects entering or exiting them.

- **AREA_SPACE_OVERRIDE_COMBINE** = **1** --- This area adds its gravity/damp values to whatever has been calculated so far. This way, many overlapping areas can combine their physics to make interesting effects.

- **AREA_SPACE_OVERRIDE_COMBINE_REPLACE** = **2** --- This area adds its gravity/damp values to whatever has been calculated so far. Then stops taking into account the rest of the areas, even the default one.

- **AREA_SPACE_OVERRIDE_REPLACE** = **3** --- This area replaces any gravity/damp, even the default one, and stops taking into account the rest of the areas.

- **AREA_SPACE_OVERRIDE_REPLACE_COMBINE** = **4** --- This area replaces any gravity/damp calculated so far, but keeps calculating the rest of the areas, down to the default one.

----

.. _enum_PhysicsServer2D_BodyMode:

.. _class_PhysicsServer2D_constant_BODY_MODE_STATIC:

.. _class_PhysicsServer2D_constant_BODY_MODE_KINEMATIC:

.. _class_PhysicsServer2D_constant_BODY_MODE_RIGID:

.. _class_PhysicsServer2D_constant_BODY_MODE_RIGID_LINEAR:

enum **BodyMode**:

- **BODY_MODE_STATIC** = **0** --- Constant for static bodies. In this mode, a body can be only moved by user code and doesn't collide with other bodies along its path when moved.

- **BODY_MODE_KINEMATIC** = **1** --- Constant for kinematic bodies. In this mode, a body can be only moved by user code and collides with other bodies along its path.

- **BODY_MODE_RIGID** = **2** --- Constant for rigid bodies. In this mode, a body can be pushed by other bodies and has forces applied.

- **BODY_MODE_RIGID_LINEAR** = **3** --- Constant for linear rigid bodies. In this mode, a body can not rotate, and only its linear velocity is affected by external forces.

----

.. _enum_PhysicsServer2D_BodyParameter:

.. _class_PhysicsServer2D_constant_BODY_PARAM_BOUNCE:

.. _class_PhysicsServer2D_constant_BODY_PARAM_FRICTION:

.. _class_PhysicsServer2D_constant_BODY_PARAM_MASS:

.. _class_PhysicsServer2D_constant_BODY_PARAM_INERTIA:

.. _class_PhysicsServer2D_constant_BODY_PARAM_CENTER_OF_MASS:

.. _class_PhysicsServer2D_constant_BODY_PARAM_GRAVITY_SCALE:

.. _class_PhysicsServer2D_constant_BODY_PARAM_LINEAR_DAMP_MODE:

.. _class_PhysicsServer2D_constant_BODY_PARAM_ANGULAR_DAMP_MODE:

.. _class_PhysicsServer2D_constant_BODY_PARAM_LINEAR_DAMP:

.. _class_PhysicsServer2D_constant_BODY_PARAM_ANGULAR_DAMP:

.. _class_PhysicsServer2D_constant_BODY_PARAM_MAX:

enum **BodyParameter**:

- **BODY_PARAM_BOUNCE** = **0** --- Constant to set/get a body's bounce factor.

- **BODY_PARAM_FRICTION** = **1** --- Constant to set/get a body's friction.

- **BODY_PARAM_MASS** = **2** --- Constant to set/get a body's mass.

- **BODY_PARAM_INERTIA** = **3** --- Constant to set/get a body's inertia.

- **BODY_PARAM_CENTER_OF_MASS** = **4** --- Constant to set/get a body's center of mass position in the body's local coordinate system.

- **BODY_PARAM_GRAVITY_SCALE** = **5** --- Constant to set/get a body's gravity multiplier.

- **BODY_PARAM_LINEAR_DAMP_MODE** = **6** --- Constant to set/get a body's linear dampening mode. See :ref:`BodyDampMode<enum_PhysicsServer2D_BodyDampMode>` for possible values.

- **BODY_PARAM_ANGULAR_DAMP_MODE** = **7** --- Constant to set/get a body's angular dampening mode. See :ref:`BodyDampMode<enum_PhysicsServer2D_BodyDampMode>` for possible values.

- **BODY_PARAM_LINEAR_DAMP** = **8** --- Constant to set/get a body's linear dampening factor.

- **BODY_PARAM_ANGULAR_DAMP** = **9** --- Constant to set/get a body's angular dampening factor.

- **BODY_PARAM_MAX** = **10** --- Represents the size of the :ref:`BodyParameter<enum_PhysicsServer2D_BodyParameter>` enum.

----

.. _enum_PhysicsServer2D_BodyDampMode:

.. _class_PhysicsServer2D_constant_BODY_DAMP_MODE_COMBINE:

.. _class_PhysicsServer2D_constant_BODY_DAMP_MODE_REPLACE:

enum **BodyDampMode**:

- **BODY_DAMP_MODE_COMBINE** = **0** --- The body's damping value is added to any value set in areas or the default value.

- **BODY_DAMP_MODE_REPLACE** = **1** --- The body's damping value replaces any value set in areas or the default value.

----

.. _enum_PhysicsServer2D_BodyState:

.. _class_PhysicsServer2D_constant_BODY_STATE_TRANSFORM:

.. _class_PhysicsServer2D_constant_BODY_STATE_LINEAR_VELOCITY:

.. _class_PhysicsServer2D_constant_BODY_STATE_ANGULAR_VELOCITY:

.. _class_PhysicsServer2D_constant_BODY_STATE_SLEEPING:

.. _class_PhysicsServer2D_constant_BODY_STATE_CAN_SLEEP:

enum **BodyState**:

- **BODY_STATE_TRANSFORM** = **0** --- Constant to set/get the current transform matrix of the body.

- **BODY_STATE_LINEAR_VELOCITY** = **1** --- Constant to set/get the current linear velocity of the body.

- **BODY_STATE_ANGULAR_VELOCITY** = **2** --- Constant to set/get the current angular velocity of the body.

- **BODY_STATE_SLEEPING** = **3** --- Constant to sleep/wake up a body, or to get whether it is sleeping.

- **BODY_STATE_CAN_SLEEP** = **4** --- Constant to set/get whether the body can sleep.

----

.. _enum_PhysicsServer2D_JointType:

.. _class_PhysicsServer2D_constant_JOINT_TYPE_PIN:

.. _class_PhysicsServer2D_constant_JOINT_TYPE_GROOVE:

.. _class_PhysicsServer2D_constant_JOINT_TYPE_DAMPED_SPRING:

.. _class_PhysicsServer2D_constant_JOINT_TYPE_MAX:

enum **JointType**:

- **JOINT_TYPE_PIN** = **0** --- Constant to create pin joints.

- **JOINT_TYPE_GROOVE** = **1** --- Constant to create groove joints.

- **JOINT_TYPE_DAMPED_SPRING** = **2** --- Constant to create damped spring joints.

- **JOINT_TYPE_MAX** = **3** --- Represents the size of the :ref:`JointType<enum_PhysicsServer2D_JointType>` enum.

----

.. _enum_PhysicsServer2D_JointParam:

.. _class_PhysicsServer2D_constant_JOINT_PARAM_BIAS:

.. _class_PhysicsServer2D_constant_JOINT_PARAM_MAX_BIAS:

.. _class_PhysicsServer2D_constant_JOINT_PARAM_MAX_FORCE:

enum **JointParam**:

- **JOINT_PARAM_BIAS** = **0**

- **JOINT_PARAM_MAX_BIAS** = **1**

- **JOINT_PARAM_MAX_FORCE** = **2**

----

.. _enum_PhysicsServer2D_DampedSpringParam:

.. _class_PhysicsServer2D_constant_DAMPED_SPRING_REST_LENGTH:

.. _class_PhysicsServer2D_constant_DAMPED_SPRING_STIFFNESS:

.. _class_PhysicsServer2D_constant_DAMPED_SPRING_DAMPING:

enum **DampedSpringParam**:

- **DAMPED_SPRING_REST_LENGTH** = **0** --- Sets the resting length of the spring joint. The joint will always try to go to back this length when pulled apart.

- **DAMPED_SPRING_STIFFNESS** = **1** --- Sets the stiffness of the spring joint. The joint applies a force equal to the stiffness times the distance from its resting length.

- **DAMPED_SPRING_DAMPING** = **2** --- Sets the damping ratio of the spring joint. A value of 0 indicates an undamped spring, while 1 causes the system to reach equilibrium as fast as possible (critical damping).

----

.. _enum_PhysicsServer2D_CCDMode:

.. _class_PhysicsServer2D_constant_CCD_MODE_DISABLED:

.. _class_PhysicsServer2D_constant_CCD_MODE_CAST_RAY:

.. _class_PhysicsServer2D_constant_CCD_MODE_CAST_SHAPE:

enum **CCDMode**:

- **CCD_MODE_DISABLED** = **0** --- Disables continuous collision detection. This is the fastest way to detect body collisions, but can miss small, fast-moving objects.

- **CCD_MODE_CAST_RAY** = **1** --- Enables continuous collision detection by raycasting. It is faster than shapecasting, but less precise.

- **CCD_MODE_CAST_SHAPE** = **2** --- Enables continuous collision detection by shapecasting. It is the slowest CCD method, and the most precise.

----

.. _enum_PhysicsServer2D_AreaBodyStatus:

.. _class_PhysicsServer2D_constant_AREA_BODY_ADDED:

.. _class_PhysicsServer2D_constant_AREA_BODY_REMOVED:

enum **AreaBodyStatus**:

- **AREA_BODY_ADDED** = **0** --- The value of the first parameter and area callback function receives, when an object enters one of its shapes.

- **AREA_BODY_REMOVED** = **1** --- The value of the first parameter and area callback function receives, when an object exits one of its shapes.

----

.. _enum_PhysicsServer2D_ProcessInfo:

.. _class_PhysicsServer2D_constant_INFO_ACTIVE_OBJECTS:

.. _class_PhysicsServer2D_constant_INFO_COLLISION_PAIRS:

.. _class_PhysicsServer2D_constant_INFO_ISLAND_COUNT:

enum **ProcessInfo**:

- **INFO_ACTIVE_OBJECTS** = **0** --- Constant to get the number of objects that are not sleeping.

- **INFO_COLLISION_PAIRS** = **1** --- Constant to get the number of possible collisions.

- **INFO_ISLAND_COUNT** = **2** --- Constant to get the number of space regions where a collision could occur.

Method Descriptions
-------------------

.. _class_PhysicsServer2D_method_area_add_shape:

- void **area_add_shape** **(** :ref:`RID<class_RID>` area, :ref:`RID<class_RID>` shape, :ref:`Transform2D<class_Transform2D>` transform=Transform2D(1, 0, 0, 1, 0, 0), :ref:`bool<class_bool>` disabled=false **)**

Adds a shape to the area, along with a transform matrix. Shapes are usually referenced by their index, so you should track which shape has a given index.

----

.. _class_PhysicsServer2D_method_area_attach_canvas_instance_id:

- void **area_attach_canvas_instance_id** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` id **)**

----

.. _class_PhysicsServer2D_method_area_attach_object_instance_id:

- void **area_attach_object_instance_id** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` id **)**

Assigns the area to a descendant of :ref:`Object<class_Object>`, so it can exist in the node tree.

----

.. _class_PhysicsServer2D_method_area_clear_shapes:

- void **area_clear_shapes** **(** :ref:`RID<class_RID>` area **)**

Removes all shapes from an area. It does not delete the shapes, so they can be reassigned later.

----

.. _class_PhysicsServer2D_method_area_create:

- :ref:`RID<class_RID>` **area_create** **(** **)**

Creates an :ref:`Area2D<class_Area2D>`. After creating an :ref:`Area2D<class_Area2D>` with this method, assign it to a space using :ref:`area_set_space<class_PhysicsServer2D_method_area_set_space>` to use the created :ref:`Area2D<class_Area2D>` in the physics world.

----

.. _class_PhysicsServer2D_method_area_get_canvas_instance_id:

- :ref:`int<class_int>` **area_get_canvas_instance_id** **(** :ref:`RID<class_RID>` area **)** |const|

----

.. _class_PhysicsServer2D_method_area_get_object_instance_id:

- :ref:`int<class_int>` **area_get_object_instance_id** **(** :ref:`RID<class_RID>` area **)** |const|

Gets the instance ID of the object the area is assigned to.

----

.. _class_PhysicsServer2D_method_area_get_param:

- :ref:`Variant<class_Variant>` **area_get_param** **(** :ref:`RID<class_RID>` area, :ref:`AreaParameter<enum_PhysicsServer2D_AreaParameter>` param **)** |const|

Returns an area parameter value. See :ref:`AreaParameter<enum_PhysicsServer2D_AreaParameter>` for a list of available parameters.

----

.. _class_PhysicsServer2D_method_area_get_shape:

- :ref:`RID<class_RID>` **area_get_shape** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx **)** |const|

Returns the :ref:`RID<class_RID>` of the nth shape of an area.

----

.. _class_PhysicsServer2D_method_area_get_shape_count:

- :ref:`int<class_int>` **area_get_shape_count** **(** :ref:`RID<class_RID>` area **)** |const|

Returns the number of shapes assigned to an area.

----

.. _class_PhysicsServer2D_method_area_get_shape_transform:

- :ref:`Transform2D<class_Transform2D>` **area_get_shape_transform** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx **)** |const|

Returns the transform matrix of a shape within an area.

----

.. _class_PhysicsServer2D_method_area_get_space:

- :ref:`RID<class_RID>` **area_get_space** **(** :ref:`RID<class_RID>` area **)** |const|

Returns the space assigned to the area.

----

.. _class_PhysicsServer2D_method_area_get_transform:

- :ref:`Transform2D<class_Transform2D>` **area_get_transform** **(** :ref:`RID<class_RID>` area **)** |const|

Returns the transform matrix for an area.

----

.. _class_PhysicsServer2D_method_area_remove_shape:

- void **area_remove_shape** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx **)**

Removes a shape from an area. It does not delete the shape, so it can be reassigned later.

----

.. _class_PhysicsServer2D_method_area_set_area_monitor_callback:

- void **area_set_area_monitor_callback** **(** :ref:`RID<class_RID>` area, :ref:`Callable<class_Callable>` callback **)**

----

.. _class_PhysicsServer2D_method_area_set_collision_layer:

- void **area_set_collision_layer** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` layer **)**

Assigns the area to one or many physics layers.

----

.. _class_PhysicsServer2D_method_area_set_collision_mask:

- void **area_set_collision_mask** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` mask **)**

Sets which physics layers the area will monitor.

----

.. _class_PhysicsServer2D_method_area_set_monitor_callback:

- void **area_set_monitor_callback** **(** :ref:`RID<class_RID>` area, :ref:`Callable<class_Callable>` callback **)**

Sets the function to call when any body/area enters or exits the area. This callback will be called for any object interacting with the area, and takes five parameters:

1: :ref:`AREA_BODY_ADDED<class_PhysicsServer2D_constant_AREA_BODY_ADDED>` or :ref:`AREA_BODY_REMOVED<class_PhysicsServer2D_constant_AREA_BODY_REMOVED>`, depending on whether the object entered or exited the area.

2: :ref:`RID<class_RID>` of the object that entered/exited the area.

3: Instance ID of the object that entered/exited the area.

4: The shape index of the object that entered/exited the area.

5: The shape index of the area where the object entered/exited.

----

.. _class_PhysicsServer2D_method_area_set_monitorable:

- void **area_set_monitorable** **(** :ref:`RID<class_RID>` area, :ref:`bool<class_bool>` monitorable **)**

----

.. _class_PhysicsServer2D_method_area_set_param:

- void **area_set_param** **(** :ref:`RID<class_RID>` area, :ref:`AreaParameter<enum_PhysicsServer2D_AreaParameter>` param, :ref:`Variant<class_Variant>` value **)**

Sets the value for an area parameter. See :ref:`AreaParameter<enum_PhysicsServer2D_AreaParameter>` for a list of available parameters.

----

.. _class_PhysicsServer2D_method_area_set_shape:

- void **area_set_shape** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx, :ref:`RID<class_RID>` shape **)**

Substitutes a given area shape by another. The old shape is selected by its index, the new one by its :ref:`RID<class_RID>`.

----

.. _class_PhysicsServer2D_method_area_set_shape_disabled:

- void **area_set_shape_disabled** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` disabled **)**

Disables a given shape in an area.

----

.. _class_PhysicsServer2D_method_area_set_shape_transform:

- void **area_set_shape_transform** **(** :ref:`RID<class_RID>` area, :ref:`int<class_int>` shape_idx, :ref:`Transform2D<class_Transform2D>` transform **)**

Sets the transform matrix for an area shape.

----

.. _class_PhysicsServer2D_method_area_set_space:

- void **area_set_space** **(** :ref:`RID<class_RID>` area, :ref:`RID<class_RID>` space **)**

Assigns a space to the area.

----

.. _class_PhysicsServer2D_method_area_set_transform:

- void **area_set_transform** **(** :ref:`RID<class_RID>` area, :ref:`Transform2D<class_Transform2D>` transform **)**

Sets the transform matrix for an area.

----

.. _class_PhysicsServer2D_method_body_add_collision_exception:

- void **body_add_collision_exception** **(** :ref:`RID<class_RID>` body, :ref:`RID<class_RID>` excepted_body **)**

Adds a body to the list of bodies exempt from collisions.

----

.. _class_PhysicsServer2D_method_body_add_constant_central_force:

- void **body_add_constant_central_force** **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force **)**

Adds a constant directional force without affecting rotation that keeps being applied over time until cleared with ``body_set_constant_force(body, Vector2(0, 0))``.

This is equivalent to using :ref:`body_add_constant_force<class_PhysicsServer2D_method_body_add_constant_force>` at the body's center of mass.

----

.. _class_PhysicsServer2D_method_body_add_constant_force:

- void **body_add_constant_force** **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force, :ref:`Vector2<class_Vector2>` position=Vector2(0, 0) **)**

Adds a constant positioned force to the body that keeps being applied over time until cleared with ``body_set_constant_force(body, Vector2(0, 0))``.

``position`` is the offset from the body origin in global coordinates.

----

.. _class_PhysicsServer2D_method_body_add_constant_torque:

- void **body_add_constant_torque** **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` torque **)**

Adds a constant rotational force without affecting position that keeps being applied over time until cleared with ``body_set_constant_torque(body, 0)``.

----

.. _class_PhysicsServer2D_method_body_add_shape:

- void **body_add_shape** **(** :ref:`RID<class_RID>` body, :ref:`RID<class_RID>` shape, :ref:`Transform2D<class_Transform2D>` transform=Transform2D(1, 0, 0, 1, 0, 0), :ref:`bool<class_bool>` disabled=false **)**

Adds a shape to the body, along with a transform matrix. Shapes are usually referenced by their index, so you should track which shape has a given index.

----

.. _class_PhysicsServer2D_method_body_apply_central_force:

- void **body_apply_central_force** **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force **)**

Applies a directional force without affecting rotation. A force is time dependent and meant to be applied every physics update.

This is equivalent to using :ref:`body_apply_force<class_PhysicsServer2D_method_body_apply_force>` at the body's center of mass.

----

.. _class_PhysicsServer2D_method_body_apply_central_impulse:

- void **body_apply_central_impulse** **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` impulse **)**

Applies a directional impulse without affecting rotation.

An impulse is time-independent! Applying an impulse every frame would result in a framerate-dependent force. For this reason, it should only be used when simulating one-time impacts (use the "_force" functions otherwise).

This is equivalent to using :ref:`body_apply_impulse<class_PhysicsServer2D_method_body_apply_impulse>` at the body's center of mass.

----

.. _class_PhysicsServer2D_method_body_apply_force:

- void **body_apply_force** **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force, :ref:`Vector2<class_Vector2>` position=Vector2(0, 0) **)**

Applies a positioned force to the body. A force is time dependent and meant to be applied every physics update.

``position`` is the offset from the body origin in global coordinates.

----

.. _class_PhysicsServer2D_method_body_apply_impulse:

- void **body_apply_impulse** **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` impulse, :ref:`Vector2<class_Vector2>` position=Vector2(0, 0) **)**

Applies a positioned impulse to the body.

An impulse is time-independent! Applying an impulse every frame would result in a framerate-dependent force. For this reason, it should only be used when simulating one-time impacts (use the "_force" functions otherwise).

``position`` is the offset from the body origin in global coordinates.

----

.. _class_PhysicsServer2D_method_body_apply_torque:

- void **body_apply_torque** **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` torque **)**

Applies a rotational force without affecting position. A force is time dependent and meant to be applied every physics update.

----

.. _class_PhysicsServer2D_method_body_apply_torque_impulse:

- void **body_apply_torque_impulse** **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` impulse **)**

Applies a rotational impulse to the body without affecting the position.

An impulse is time-independent! Applying an impulse every frame would result in a framerate-dependent force. For this reason, it should only be used when simulating one-time impacts (use the "_force" functions otherwise).

----

.. _class_PhysicsServer2D_method_body_attach_canvas_instance_id:

- void **body_attach_canvas_instance_id** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` id **)**

----

.. _class_PhysicsServer2D_method_body_attach_object_instance_id:

- void **body_attach_object_instance_id** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` id **)**

Assigns the area to a descendant of :ref:`Object<class_Object>`, so it can exist in the node tree.

----

.. _class_PhysicsServer2D_method_body_clear_shapes:

- void **body_clear_shapes** **(** :ref:`RID<class_RID>` body **)**

Removes all shapes from a body.

----

.. _class_PhysicsServer2D_method_body_create:

- :ref:`RID<class_RID>` **body_create** **(** **)**

Creates a physics body.

----

.. _class_PhysicsServer2D_method_body_get_canvas_instance_id:

- :ref:`int<class_int>` **body_get_canvas_instance_id** **(** :ref:`RID<class_RID>` body **)** |const|

----

.. _class_PhysicsServer2D_method_body_get_collision_layer:

- :ref:`int<class_int>` **body_get_collision_layer** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the physics layer or layers a body belongs to.

----

.. _class_PhysicsServer2D_method_body_get_collision_mask:

- :ref:`int<class_int>` **body_get_collision_mask** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the physics layer or layers a body can collide with.

----

.. _class_PhysicsServer2D_method_body_get_collision_priority:

- :ref:`float<class_float>` **body_get_collision_priority** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the body's collision priority.

----

.. _class_PhysicsServer2D_method_body_get_constant_force:

- :ref:`Vector2<class_Vector2>` **body_get_constant_force** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the body's total constant positional forces applied during each physics update.

See :ref:`body_add_constant_force<class_PhysicsServer2D_method_body_add_constant_force>` and :ref:`body_add_constant_central_force<class_PhysicsServer2D_method_body_add_constant_central_force>`.

----

.. _class_PhysicsServer2D_method_body_get_constant_torque:

- :ref:`float<class_float>` **body_get_constant_torque** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the body's total constant rotational forces applied during each physics update.

See :ref:`body_add_constant_torque<class_PhysicsServer2D_method_body_add_constant_torque>`.

----

.. _class_PhysicsServer2D_method_body_get_continuous_collision_detection_mode:

- :ref:`CCDMode<enum_PhysicsServer2D_CCDMode>` **body_get_continuous_collision_detection_mode** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the continuous collision detection mode.

----

.. _class_PhysicsServer2D_method_body_get_direct_state:

- :ref:`PhysicsDirectBodyState2D<class_PhysicsDirectBodyState2D>` **body_get_direct_state** **(** :ref:`RID<class_RID>` body **)**

Returns the :ref:`PhysicsDirectBodyState2D<class_PhysicsDirectBodyState2D>` of the body. Returns ``null`` if the body is destroyed or removed from the physics space.

----

.. _class_PhysicsServer2D_method_body_get_max_contacts_reported:

- :ref:`int<class_int>` **body_get_max_contacts_reported** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the maximum contacts that can be reported. See :ref:`body_set_max_contacts_reported<class_PhysicsServer2D_method_body_set_max_contacts_reported>`.

----

.. _class_PhysicsServer2D_method_body_get_mode:

- :ref:`BodyMode<enum_PhysicsServer2D_BodyMode>` **body_get_mode** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the body mode.

----

.. _class_PhysicsServer2D_method_body_get_object_instance_id:

- :ref:`int<class_int>` **body_get_object_instance_id** **(** :ref:`RID<class_RID>` body **)** |const|

Gets the instance ID of the object the area is assigned to.

----

.. _class_PhysicsServer2D_method_body_get_param:

- :ref:`Variant<class_Variant>` **body_get_param** **(** :ref:`RID<class_RID>` body, :ref:`BodyParameter<enum_PhysicsServer2D_BodyParameter>` param **)** |const|

Returns the value of a body parameter. See :ref:`BodyParameter<enum_PhysicsServer2D_BodyParameter>` for a list of available parameters.

----

.. _class_PhysicsServer2D_method_body_get_shape:

- :ref:`RID<class_RID>` **body_get_shape** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx **)** |const|

Returns the :ref:`RID<class_RID>` of the nth shape of a body.

----

.. _class_PhysicsServer2D_method_body_get_shape_count:

- :ref:`int<class_int>` **body_get_shape_count** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the number of shapes assigned to a body.

----

.. _class_PhysicsServer2D_method_body_get_shape_transform:

- :ref:`Transform2D<class_Transform2D>` **body_get_shape_transform** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx **)** |const|

Returns the transform matrix of a body shape.

----

.. _class_PhysicsServer2D_method_body_get_space:

- :ref:`RID<class_RID>` **body_get_space** **(** :ref:`RID<class_RID>` body **)** |const|

Returns the :ref:`RID<class_RID>` of the space assigned to a body.

----

.. _class_PhysicsServer2D_method_body_get_state:

- :ref:`Variant<class_Variant>` **body_get_state** **(** :ref:`RID<class_RID>` body, :ref:`BodyState<enum_PhysicsServer2D_BodyState>` state **)** |const|

Returns a body state.

----

.. _class_PhysicsServer2D_method_body_is_omitting_force_integration:

- :ref:`bool<class_bool>` **body_is_omitting_force_integration** **(** :ref:`RID<class_RID>` body **)** |const|

Returns whether a body uses a callback function to calculate its own physics (see :ref:`body_set_force_integration_callback<class_PhysicsServer2D_method_body_set_force_integration_callback>`).

----

.. _class_PhysicsServer2D_method_body_remove_collision_exception:

- void **body_remove_collision_exception** **(** :ref:`RID<class_RID>` body, :ref:`RID<class_RID>` excepted_body **)**

Removes a body from the list of bodies exempt from collisions.

----

.. _class_PhysicsServer2D_method_body_remove_shape:

- void **body_remove_shape** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx **)**

Removes a shape from a body. The shape is not deleted, so it can be reused afterwards.

----

.. _class_PhysicsServer2D_method_body_reset_mass_properties:

- void **body_reset_mass_properties** **(** :ref:`RID<class_RID>` body **)**

Restores the default inertia and center of mass based on shapes to cancel any custom values previously set using :ref:`body_set_param<class_PhysicsServer2D_method_body_set_param>`.

----

.. _class_PhysicsServer2D_method_body_set_axis_velocity:

- void **body_set_axis_velocity** **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` axis_velocity **)**

Sets an axis velocity. The velocity in the given vector axis will be set as the given vector length. This is useful for jumping behavior.

----

.. _class_PhysicsServer2D_method_body_set_collision_layer:

- void **body_set_collision_layer** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` layer **)**

Sets the physics layer or layers a body belongs to.

----

.. _class_PhysicsServer2D_method_body_set_collision_mask:

- void **body_set_collision_mask** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` mask **)**

Sets the physics layer or layers a body can collide with.

----

.. _class_PhysicsServer2D_method_body_set_collision_priority:

- void **body_set_collision_priority** **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` priority **)**

Sets the body's collision priority.

----

.. _class_PhysicsServer2D_method_body_set_constant_force:

- void **body_set_constant_force** **(** :ref:`RID<class_RID>` body, :ref:`Vector2<class_Vector2>` force **)**

Sets the body's total constant positional forces applied during each physics update.

See :ref:`body_add_constant_force<class_PhysicsServer2D_method_body_add_constant_force>` and :ref:`body_add_constant_central_force<class_PhysicsServer2D_method_body_add_constant_central_force>`.

----

.. _class_PhysicsServer2D_method_body_set_constant_torque:

- void **body_set_constant_torque** **(** :ref:`RID<class_RID>` body, :ref:`float<class_float>` torque **)**

Sets the body's total constant rotational forces applied during each physics update.

See :ref:`body_add_constant_torque<class_PhysicsServer2D_method_body_add_constant_torque>`.

----

.. _class_PhysicsServer2D_method_body_set_continuous_collision_detection_mode:

- void **body_set_continuous_collision_detection_mode** **(** :ref:`RID<class_RID>` body, :ref:`CCDMode<enum_PhysicsServer2D_CCDMode>` mode **)**

Sets the continuous collision detection mode using one of the :ref:`CCDMode<enum_PhysicsServer2D_CCDMode>` constants.

Continuous collision detection tries to predict where a moving body will collide, instead of moving it and correcting its movement if it collided.

----

.. _class_PhysicsServer2D_method_body_set_force_integration_callback:

- void **body_set_force_integration_callback** **(** :ref:`RID<class_RID>` body, :ref:`Callable<class_Callable>` callable, :ref:`Variant<class_Variant>` userdata=null **)**

Sets the function used to calculate physics for an object, if that object allows it (see :ref:`body_set_omit_force_integration<class_PhysicsServer2D_method_body_set_omit_force_integration>`).

The force integration function takes 2 arguments:

\ ``state:`` :ref:`PhysicsDirectBodyState2D<class_PhysicsDirectBodyState2D>` used to retrieve and modify the body's state.

\ ``userdata:`` Optional user data, if it was passed when calling ``body_set_force_integration_callback``.

----

.. _class_PhysicsServer2D_method_body_set_max_contacts_reported:

- void **body_set_max_contacts_reported** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` amount **)**

Sets the maximum contacts to report. Bodies can keep a log of the contacts with other bodies. This is enabled by setting the maximum number of contacts reported to a number greater than 0.

----

.. _class_PhysicsServer2D_method_body_set_mode:

- void **body_set_mode** **(** :ref:`RID<class_RID>` body, :ref:`BodyMode<enum_PhysicsServer2D_BodyMode>` mode **)**

Sets the body mode using one of the :ref:`BodyMode<enum_PhysicsServer2D_BodyMode>` constants.

----

.. _class_PhysicsServer2D_method_body_set_omit_force_integration:

- void **body_set_omit_force_integration** **(** :ref:`RID<class_RID>` body, :ref:`bool<class_bool>` enable **)**

Sets whether a body uses a callback function to calculate its own physics (see :ref:`body_set_force_integration_callback<class_PhysicsServer2D_method_body_set_force_integration_callback>`).

----

.. _class_PhysicsServer2D_method_body_set_param:

- void **body_set_param** **(** :ref:`RID<class_RID>` body, :ref:`BodyParameter<enum_PhysicsServer2D_BodyParameter>` param, :ref:`Variant<class_Variant>` value **)**

Sets a body parameter. See :ref:`BodyParameter<enum_PhysicsServer2D_BodyParameter>` for a list of available parameters.

----

.. _class_PhysicsServer2D_method_body_set_shape:

- void **body_set_shape** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx, :ref:`RID<class_RID>` shape **)**

Substitutes a given body shape by another. The old shape is selected by its index, the new one by its :ref:`RID<class_RID>`.

----

.. _class_PhysicsServer2D_method_body_set_shape_as_one_way_collision:

- void **body_set_shape_as_one_way_collision** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` enable, :ref:`float<class_float>` margin **)**

Enables one way collision on body if ``enable`` is ``true``.

----

.. _class_PhysicsServer2D_method_body_set_shape_disabled:

- void **body_set_shape_disabled** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx, :ref:`bool<class_bool>` disabled **)**

Disables shape in body if ``disabled`` is ``true``.

----

.. _class_PhysicsServer2D_method_body_set_shape_transform:

- void **body_set_shape_transform** **(** :ref:`RID<class_RID>` body, :ref:`int<class_int>` shape_idx, :ref:`Transform2D<class_Transform2D>` transform **)**

Sets the transform matrix for a body shape.

----

.. _class_PhysicsServer2D_method_body_set_space:

- void **body_set_space** **(** :ref:`RID<class_RID>` body, :ref:`RID<class_RID>` space **)**

Assigns a space to the body (see :ref:`space_create<class_PhysicsServer2D_method_space_create>`).

----

.. _class_PhysicsServer2D_method_body_set_state:

- void **body_set_state** **(** :ref:`RID<class_RID>` body, :ref:`BodyState<enum_PhysicsServer2D_BodyState>` state, :ref:`Variant<class_Variant>` value **)**

Sets a body state using one of the :ref:`BodyState<enum_PhysicsServer2D_BodyState>` constants.

Note that the method doesn't take effect immediately. The state will change on the next physics frame.

----

.. _class_PhysicsServer2D_method_body_test_motion:

- :ref:`bool<class_bool>` **body_test_motion** **(** :ref:`RID<class_RID>` body, :ref:`PhysicsTestMotionParameters2D<class_PhysicsTestMotionParameters2D>` parameters, :ref:`PhysicsTestMotionResult2D<class_PhysicsTestMotionResult2D>` result=null **)**

Returns ``true`` if a collision would result from moving along a motion vector from a given point in space. :ref:`PhysicsTestMotionParameters2D<class_PhysicsTestMotionParameters2D>` is passed to set motion parameters. :ref:`PhysicsTestMotionResult2D<class_PhysicsTestMotionResult2D>` can be passed to return additional information.

----

.. _class_PhysicsServer2D_method_capsule_shape_create:

- :ref:`RID<class_RID>` **capsule_shape_create** **(** **)**

----

.. _class_PhysicsServer2D_method_circle_shape_create:

- :ref:`RID<class_RID>` **circle_shape_create** **(** **)**

----

.. _class_PhysicsServer2D_method_concave_polygon_shape_create:

- :ref:`RID<class_RID>` **concave_polygon_shape_create** **(** **)**

----

.. _class_PhysicsServer2D_method_convex_polygon_shape_create:

- :ref:`RID<class_RID>` **convex_polygon_shape_create** **(** **)**

----

.. _class_PhysicsServer2D_method_damped_spring_joint_get_param:

- :ref:`float<class_float>` **damped_spring_joint_get_param** **(** :ref:`RID<class_RID>` joint, :ref:`DampedSpringParam<enum_PhysicsServer2D_DampedSpringParam>` param **)** |const|

Returns the value of a damped spring joint parameter. See :ref:`DampedSpringParam<enum_PhysicsServer2D_DampedSpringParam>` for a list of available parameters.

----

.. _class_PhysicsServer2D_method_damped_spring_joint_set_param:

- void **damped_spring_joint_set_param** **(** :ref:`RID<class_RID>` joint, :ref:`DampedSpringParam<enum_PhysicsServer2D_DampedSpringParam>` param, :ref:`float<class_float>` value **)**

Sets a damped spring joint parameter. See :ref:`DampedSpringParam<enum_PhysicsServer2D_DampedSpringParam>` for a list of available parameters.

----

.. _class_PhysicsServer2D_method_free_rid:

- void **free_rid** **(** :ref:`RID<class_RID>` rid **)**

Destroys any of the objects created by PhysicsServer2D. If the :ref:`RID<class_RID>` passed is not one of the objects that can be created by PhysicsServer2D, an error will be sent to the console.

----

.. _class_PhysicsServer2D_method_get_process_info:

- :ref:`int<class_int>` **get_process_info** **(** :ref:`ProcessInfo<enum_PhysicsServer2D_ProcessInfo>` process_info **)**

Returns information about the current state of the 2D physics engine. See :ref:`ProcessInfo<enum_PhysicsServer2D_ProcessInfo>` for a list of available states.

----

.. _class_PhysicsServer2D_method_joint_clear:

- void **joint_clear** **(** :ref:`RID<class_RID>` joint **)**

----

.. _class_PhysicsServer2D_method_joint_create:

- :ref:`RID<class_RID>` **joint_create** **(** **)**

----

.. _class_PhysicsServer2D_method_joint_get_param:

- :ref:`float<class_float>` **joint_get_param** **(** :ref:`RID<class_RID>` joint, :ref:`JointParam<enum_PhysicsServer2D_JointParam>` param **)** |const|

Returns the value of a joint parameter.

----

.. _class_PhysicsServer2D_method_joint_get_type:

- :ref:`JointType<enum_PhysicsServer2D_JointType>` **joint_get_type** **(** :ref:`RID<class_RID>` joint **)** |const|

Returns a joint's type (see :ref:`JointType<enum_PhysicsServer2D_JointType>`).

----

.. _class_PhysicsServer2D_method_joint_make_damped_spring:

- void **joint_make_damped_spring** **(** :ref:`RID<class_RID>` joint, :ref:`Vector2<class_Vector2>` anchor_a, :ref:`Vector2<class_Vector2>` anchor_b, :ref:`RID<class_RID>` body_a, :ref:`RID<class_RID>` body_b **)**

----

.. _class_PhysicsServer2D_method_joint_make_groove:

- void **joint_make_groove** **(** :ref:`RID<class_RID>` joint, :ref:`Vector2<class_Vector2>` groove1_a, :ref:`Vector2<class_Vector2>` groove2_a, :ref:`Vector2<class_Vector2>` anchor_b, :ref:`RID<class_RID>` body_a, :ref:`RID<class_RID>` body_b **)**

----

.. _class_PhysicsServer2D_method_joint_make_pin:

- void **joint_make_pin** **(** :ref:`RID<class_RID>` joint, :ref:`Vector2<class_Vector2>` anchor, :ref:`RID<class_RID>` body_a, :ref:`RID<class_RID>` body_b **)**

----

.. _class_PhysicsServer2D_method_joint_set_param:

- void **joint_set_param** **(** :ref:`RID<class_RID>` joint, :ref:`JointParam<enum_PhysicsServer2D_JointParam>` param, :ref:`float<class_float>` value **)**

Sets a joint parameter. See :ref:`JointParam<enum_PhysicsServer2D_JointParam>` for a list of available parameters.

----

.. _class_PhysicsServer2D_method_rectangle_shape_create:

- :ref:`RID<class_RID>` **rectangle_shape_create** **(** **)**

----

.. _class_PhysicsServer2D_method_segment_shape_create:

- :ref:`RID<class_RID>` **segment_shape_create** **(** **)**

----

.. _class_PhysicsServer2D_method_separation_ray_shape_create:

- :ref:`RID<class_RID>` **separation_ray_shape_create** **(** **)**

----

.. _class_PhysicsServer2D_method_set_active:

- void **set_active** **(** :ref:`bool<class_bool>` active **)**

Activates or deactivates the 2D physics engine.

----

.. _class_PhysicsServer2D_method_shape_get_data:

- :ref:`Variant<class_Variant>` **shape_get_data** **(** :ref:`RID<class_RID>` shape **)** |const|

Returns the shape data.

----

.. _class_PhysicsServer2D_method_shape_get_type:

- :ref:`ShapeType<enum_PhysicsServer2D_ShapeType>` **shape_get_type** **(** :ref:`RID<class_RID>` shape **)** |const|

Returns a shape's type (see :ref:`ShapeType<enum_PhysicsServer2D_ShapeType>`).

----

.. _class_PhysicsServer2D_method_shape_set_data:

- void **shape_set_data** **(** :ref:`RID<class_RID>` shape, :ref:`Variant<class_Variant>` data **)**

Sets the shape data that defines its shape and size. The data to be passed depends on the kind of shape created :ref:`shape_get_type<class_PhysicsServer2D_method_shape_get_type>`.

----

.. _class_PhysicsServer2D_method_space_create:

- :ref:`RID<class_RID>` **space_create** **(** **)**

Creates a space. A space is a collection of parameters for the physics engine that can be assigned to an area or a body. It can be assigned to an area with :ref:`area_set_space<class_PhysicsServer2D_method_area_set_space>`, or to a body with :ref:`body_set_space<class_PhysicsServer2D_method_body_set_space>`.

----

.. _class_PhysicsServer2D_method_space_get_direct_state:

- :ref:`PhysicsDirectSpaceState2D<class_PhysicsDirectSpaceState2D>` **space_get_direct_state** **(** :ref:`RID<class_RID>` space **)**

Returns the state of a space, a :ref:`PhysicsDirectSpaceState2D<class_PhysicsDirectSpaceState2D>`. This object can be used to make collision/intersection queries.

----

.. _class_PhysicsServer2D_method_space_get_param:

- :ref:`float<class_float>` **space_get_param** **(** :ref:`RID<class_RID>` space, :ref:`SpaceParameter<enum_PhysicsServer2D_SpaceParameter>` param **)** |const|

Returns the value of a space parameter.

----

.. _class_PhysicsServer2D_method_space_is_active:

- :ref:`bool<class_bool>` **space_is_active** **(** :ref:`RID<class_RID>` space **)** |const|

Returns whether the space is active.

----

.. _class_PhysicsServer2D_method_space_set_active:

- void **space_set_active** **(** :ref:`RID<class_RID>` space, :ref:`bool<class_bool>` active **)**

Marks a space as active. It will not have an effect, unless it is assigned to an area or body.

----

.. _class_PhysicsServer2D_method_space_set_param:

- void **space_set_param** **(** :ref:`RID<class_RID>` space, :ref:`SpaceParameter<enum_PhysicsServer2D_SpaceParameter>` param, :ref:`float<class_float>` value **)**

Sets the value for a space parameter. See :ref:`SpaceParameter<enum_PhysicsServer2D_SpaceParameter>` for a list of available parameters.

----

.. _class_PhysicsServer2D_method_world_boundary_shape_create:

- :ref:`RID<class_RID>` **world_boundary_shape_create** **(** **)**

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
