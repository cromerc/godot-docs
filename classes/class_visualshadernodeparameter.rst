:github_url: hide

.. DO NOT EDIT THIS FILE!!!
.. Generated automatically from Godot engine sources.
.. Generator: https://github.com/godotengine/godot/tree/master/doc/tools/make_rst.py.
.. XML source: https://github.com/godotengine/godot/tree/master/doc/classes/VisualShaderNodeParameter.xml.

.. _class_VisualShaderNodeParameter:

VisualShaderNodeParameter
=========================

**Inherits:** :ref:`VisualShaderNode<class_VisualShaderNode>` **<** :ref:`Resource<class_Resource>` **<** :ref:`RefCounted<class_RefCounted>` **<** :ref:`Object<class_Object>`

**Inherited By:** :ref:`VisualShaderNodeBooleanParameter<class_VisualShaderNodeBooleanParameter>`, :ref:`VisualShaderNodeColorParameter<class_VisualShaderNodeColorParameter>`, :ref:`VisualShaderNodeFloatParameter<class_VisualShaderNodeFloatParameter>`, :ref:`VisualShaderNodeIntParameter<class_VisualShaderNodeIntParameter>`, :ref:`VisualShaderNodeTextureParameter<class_VisualShaderNodeTextureParameter>`, :ref:`VisualShaderNodeTransformParameter<class_VisualShaderNodeTransformParameter>`, :ref:`VisualShaderNodeVec2Parameter<class_VisualShaderNodeVec2Parameter>`, :ref:`VisualShaderNodeVec3Parameter<class_VisualShaderNodeVec3Parameter>`, :ref:`VisualShaderNodeVec4Parameter<class_VisualShaderNodeVec4Parameter>`

A base type for the parameters within the visual shader graph.

Description
-----------

A parameter represents a variable in the shader which is set externally, i.e. from the :ref:`ShaderMaterial<class_ShaderMaterial>`. Parameters are exposed as properties in the :ref:`ShaderMaterial<class_ShaderMaterial>` and can be assigned from the inspector or from a script.

Properties
----------

+------------------------------------------------------------+--------------------------------------------------------------------------------+--------+
| :ref:`String<class_String>`                                | :ref:`parameter_name<class_VisualShaderNodeParameter_property_parameter_name>` | ``""`` |
+------------------------------------------------------------+--------------------------------------------------------------------------------+--------+
| :ref:`Qualifier<enum_VisualShaderNodeParameter_Qualifier>` | :ref:`qualifier<class_VisualShaderNodeParameter_property_qualifier>`           | ``0``  |
+------------------------------------------------------------+--------------------------------------------------------------------------------+--------+

Enumerations
------------

.. _enum_VisualShaderNodeParameter_Qualifier:

.. _class_VisualShaderNodeParameter_constant_QUAL_NONE:

.. _class_VisualShaderNodeParameter_constant_QUAL_GLOBAL:

.. _class_VisualShaderNodeParameter_constant_QUAL_INSTANCE:

.. _class_VisualShaderNodeParameter_constant_QUAL_MAX:

enum **Qualifier**:

- **QUAL_NONE** = **0**

- **QUAL_GLOBAL** = **1**

- **QUAL_INSTANCE** = **2**

- **QUAL_MAX** = **3** --- Represents the size of the :ref:`Qualifier<enum_VisualShaderNodeParameter_Qualifier>` enum.

Property Descriptions
---------------------

.. _class_VisualShaderNodeParameter_property_parameter_name:

- :ref:`String<class_String>` **parameter_name**

+-----------+---------------------------+
| *Default* | ``""``                    |
+-----------+---------------------------+
| *Setter*  | set_parameter_name(value) |
+-----------+---------------------------+
| *Getter*  | get_parameter_name()      |
+-----------+---------------------------+

Name of the parameter, by which it can be accessed through the :ref:`ShaderMaterial<class_ShaderMaterial>` properties.

----

.. _class_VisualShaderNodeParameter_property_qualifier:

- :ref:`Qualifier<enum_VisualShaderNodeParameter_Qualifier>` **qualifier**

+-----------+----------------------+
| *Default* | ``0``                |
+-----------+----------------------+
| *Setter*  | set_qualifier(value) |
+-----------+----------------------+
| *Getter*  | get_qualifier()      |
+-----------+----------------------+

.. |virtual| replace:: :abbr:`virtual (This method should typically be overridden by the user to have any effect.)`
.. |const| replace:: :abbr:`const (This method has no side effects. It doesn't modify any of the instance's member variables.)`
.. |vararg| replace:: :abbr:`vararg (This method accepts any number of arguments after the ones described here.)`
.. |constructor| replace:: :abbr:`constructor (This method is used to construct a type.)`
.. |static| replace:: :abbr:`static (This method doesn't need an instance to be called, so it can be called directly using the class name.)`
.. |operator| replace:: :abbr:`operator (This method describes a valid operator to use with this type as left-hand operand.)`
